{"version":3,"sources":["../../src/utils/asArray.ts","../../src/utils/joinTruthy.ts","../../src/utils/stableHash.ts","../../src/utils/stringManipulators.ts","../../src/Rule.ts","../../src/utils/is.ts","../../src/Sheet.ts","../../src/utils/forIn.ts","../../src/cx.ts","../../src/index.ts"],"sourcesContent":["export function asArray<T>(v: T | T[]): T[] {\n  return [].concat(v as unknown as []);\n}\n","export function joinTruthy(arr: unknown[], delimiter: string = ''): string {\n  return arr.filter(Boolean).join(delimiter);\n}\n","// Stable hash function.\nexport function stableHash(prefix: string, seed: string): string {\n  let hash = 0;\n  if (seed.length === 0) return hash.toString();\n  for (let i = 0; i < seed.length; i++) {\n    const char = seed.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return `${prefix ?? 'cl'}_${hash.toString(36)}`;\n}\n","import { ClassList } from '../types.js';\n\n// Some properties need special handling\nexport function handlePropertyValue(property: string, value: string): string {\n  if (property === 'content') {\n    return `\"${value}\"`;\n  }\n\n  return value;\n}\n\nexport function camelCaseToDash(str: string): string {\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\nexport function joinedProperty(property: string, value: string): string {\n  return `${property}:${value}`;\n}\n\nexport function joinSelectors(classes: ClassList): string {\n  return classes\n    .filter(Boolean)\n    .map((c) => `.${c}`)\n    .join(' ');\n}\n\nexport function appendString(base: string, line: string): string {\n  return base ? `${base}\\n${line}` : line;\n}\n","import { Sheet } from './Sheet';\nimport { asArray } from './utils/asArray';\nimport { joinTruthy } from './utils/joinTruthy';\nimport { stableHash } from './utils/stableHash';\nimport {\n  camelCaseToDash,\n  handlePropertyValue,\n  joinSelectors,\n  joinedProperty,\n} from './utils/stringManipulators';\n\nexport class Rule {\n  public hash: string;\n  public joined: string;\n  public key: string;\n\n  constructor(\n    private sheet: Sheet,\n    public property: string,\n    public value: string,\n    private selector: Selector,\n  ) {\n    this.property = property;\n    this.value = value;\n    this.joined = joinedProperty(property, value);\n    this.key = joinTruthy([\n      this.joined,\n      joinSelectors(this.selector.preconditions),\n      this.selector.pseudoSelector,\n    ]);\n    this.hash = stableHash(\n      this.sheet.name,\n      this.joined +\n        joinTruthy(this.selector.preconditions) +\n        (this.selector.pseudoSelector\n          ? (this.selector.pseudoSelector as string)\n          : ''),\n    );\n  }\n\n  public toString(): string {\n    const selectors = joinTruthy([\n      joinSelectors(this.selector.preconditions.concat(this.hash)),\n      this.selector.pseudoSelector,\n    ]);\n\n    return `${selectors} {${Rule.genRule(this.property, this.value)}}`;\n  }\n\n  static genRule(property: string, value: string): string {\n    const transformedProperty = camelCaseToDash(property);\n    return (\n      joinedProperty(\n        transformedProperty,\n        handlePropertyValue(property, value),\n      ) + ';'\n    );\n  }\n}\n\nexport class Selector {\n  public preconditions: string[] = [];\n  public pseudoSelector: string | undefined;\n  public scopeClassName: string;\n\n  constructor(\n    private sheet: Sheet,\n    public scopeName: string,\n    {\n      pseudoSelector,\n      preconditions,\n    }: {\n      pseudoSelector?: string | undefined;\n      preconditions?: string[] | string | undefined;\n    } = {},\n  ) {\n    this.pseudoSelector = pseudoSelector;\n    this.preconditions = preconditions ? asArray(preconditions) : [];\n    this.scopeClassName = scopeName;\n  }\n\n  addPseudoSelector(pseudoSelector: string): Selector {\n    return new Selector(this.sheet, this.scopeClassName, {\n      pseudoSelector,\n      preconditions: this.preconditions,\n    });\n  }\n\n  addPrecondition(precondition: string): Selector {\n    return new Selector(this.sheet, this.scopeClassName, {\n      pseudoSelector: this.pseudoSelector,\n      preconditions: this.preconditions.concat(precondition),\n    });\n  }\n\n  createRule(property: string, value: string): Rule {\n    return new Rule(this.sheet, property, value, this);\n  }\n}\n","import { CSSVariablesObject, StyleObject, Styles } from '../types.js';\n\n// Selectors\nexport const is = {\n  pseudoSelector: (selector: string, _: unknown): _ is StyleObject =>\n    selector.startsWith(':'),\n  mediaQuery: (property: string, _: unknown): _ is Styles =>\n    property.startsWith('@media'),\n  directClass: (property: string, _: unknown): _ is string | string[] =>\n    property === '.',\n  cssVariables: (property: string, _: unknown): _ is CSSVariablesObject =>\n    property === '--',\n  validProperty: (property: string, value: unknown): value is string =>\n    (typeof value === 'string' || typeof value === 'number') &&\n    !is.cssVariables(property, value) &&\n    !is.pseudoSelector(property, value) &&\n    !is.mediaQuery(property, value),\n  topLevelClass: (property: string, _: unknown): _ is StyleObject =>\n    property.startsWith('.') && property.length > 1,\n  string: (value: unknown): value is string => typeof value === 'string',\n};\n","import { Rule } from './Rule.js';\nimport { StoredStyles } from './types.js';\nimport { is } from './utils/is.js';\nimport { appendString } from './utils/stringManipulators.js';\n\nexport class Sheet {\n  private styleTag: HTMLStyleElement | undefined;\n\n  // Hash->css\n  private storedStyles: StoredStyles = {};\n\n  // styles->hash\n  private storedClasses: Record<string, string> = {};\n  private style: string = '';\n  public count = 0;\n  public id: string;\n\n  constructor(public name: string) {\n    this.id = `flairup-${name}`;\n\n    this.styleTag = this.createStyleTag();\n  }\n\n  getStyle(): string {\n    return this.style;\n  }\n\n  append(css: string): void {\n    this.style = appendString(this.style, css);\n  }\n\n  apply(): void {\n    this.count++;\n\n    if (!this.styleTag) {\n      return;\n    }\n\n    this.styleTag.innerHTML = this.style;\n  }\n\n  isApplied(): boolean {\n    return !!this.styleTag;\n  }\n\n  createStyleTag(): HTMLStyleElement | undefined {\n    // check that we're in the browser and have access to the DOM\n    if (typeof document === 'undefined' || this.isApplied()) {\n      return;\n    }\n\n    const styleTag = document.createElement('style');\n    styleTag.type = 'text/css';\n    styleTag.id = this.id;\n    document.head.appendChild(styleTag);\n    return styleTag;\n  }\n\n  addRule(rule: Rule): string {\n    const storedClass = this.storedClasses[rule.key];\n\n    if (is.string(storedClass)) {\n      return storedClass;\n    }\n\n    this.storedClasses[rule.key] = rule.hash;\n    this.storedStyles[rule.hash] = [rule.property, rule.value];\n\n    this.append(rule.toString());\n    return rule.hash;\n  }\n}\n","export function forIn<O extends Record<string, unknown>>(\n  obj: O,\n  fn: (key: string, value: O[string]) => void,\n): void {\n  for (const key in obj) {\n    fn(key.trim(), obj[key]);\n  }\n}\n","import { joinTruthy } from './utils/joinTruthy';\n\nexport function cx(...args: unknown[]): string {\n  const classes = args.reduce((classes: string[], arg) => {\n    if (arg instanceof Set) {\n      classes.push(...arg);\n    } else if (typeof arg === 'string') {\n      classes.push(arg);\n    } else if (Array.isArray(arg)) {\n      classes.push(cx(...arg));\n    } else if (typeof arg === 'object') {\n      // @ts-expect-error - it is a string\n      Object.entries(arg).forEach(([key, value]) => {\n        if (value) {\n          classes.push(key);\n        }\n      });\n    }\n\n    return classes;\n  }, [] as string[]);\n\n  return joinTruthy(classes, ' ').trim();\n}\n","import { Rule, Selector } from './Rule.js';\nimport { Sheet } from './Sheet.js';\nimport {\n  CSSVariablesObject,\n  ClassSet,\n  CreateSheetInput,\n  ScopedStyles,\n  Styles,\n  createSheetReturn,\n} from './types.js';\nimport { asArray } from './utils/asArray.js';\nimport { forIn } from './utils/forIn.js';\nimport { is } from './utils/is.js';\nimport { stableHash } from './utils/stableHash.js';\nimport { joinSelectors } from './utils/stringManipulators.js';\n\nexport { cx } from './cx.js';\n\n// eslint-disable-next-line max-lines-per-function\nexport function createSheet(name: string): createSheetReturn {\n  const sheet = new Sheet(name);\n\n  return {\n    create,\n    getStyle: sheet.getStyle.bind(sheet),\n    isApplied: sheet.isApplied.bind(sheet),\n  };\n\n  function create<K extends string>(styles: CreateSheetInput<K>) {\n    const scopedStyles: ScopedStyles<K> = {} as ScopedStyles<K>;\n\n    forIn(styles, (scopeName, styles) => {\n      // This handles a class that's wrapping a scoped style.\n      // This allows us setting sort of a \"precondition\" selector for the scoped styles.\n\n      if (is.topLevelClass(scopeName, styles)) {\n        forIn(styles, (childScope, value) => {\n          // This is an actual scoped style, so we need to iterate over it.\n          const scopeClassName = stableHash(sheet.name, childScope);\n          const precondition = scopeName.slice(1); // Remove the dot\n          iterateStyles(\n            sheet,\n            value as Styles,\n            new Selector(sheet, scopeClassName, {\n              preconditions: precondition,\n            }),\n          ).forEach((className: string) => {\n            addScopedStyle(childScope as unknown as K, className);\n          });\n        });\n        return;\n      }\n\n      const scopeClassName = stableHash(sheet.name, scopeName);\n\n      // Handles the default case in which we have a scope directly on the root level.\n      iterateStyles(\n        sheet,\n        styles as Styles,\n        new Selector(sheet, scopeClassName, {}),\n      ).forEach((className) => {\n        addScopedStyle(scopeName as K, className);\n      });\n    });\n\n    // Commit the styles to the sheet.\n    // Done only once per create call.\n    // This way we do not update the DOM on every style.\n    sheet.apply();\n\n    return scopedStyles;\n\n    function addScopedStyle(name: K, className: string) {\n      scopedStyles[name as keyof ScopedStyles<K>] =\n        scopedStyles[name as keyof ScopedStyles<K>] ?? new Set<string>();\n      scopedStyles[name as keyof ScopedStyles<K>].add(className);\n    }\n  }\n}\n\nfunction iterateStyles(sheet: Sheet, styles: Styles, selector: Selector) {\n  const output: ClassSet = new Set<string>();\n  // eslint-disable-next-line max-statements\n  forIn(styles, (property, value) => {\n    let res: string[] | Set<string> = [];\n\n    if (is.directClass(property, value)) {\n      res = asArray(value);\n    } else if (is.mediaQuery(property, value)) {\n      res = handleMediaQuery(sheet, value, property, selector);\n    } else if (is.cssVariables(property, value)) {\n      res = cssVariablesBlock(sheet, value, selector);\n    } else if (is.pseudoSelector(property, value)) {\n      res = iterateStyles(sheet, value, selector.addPseudoSelector(property));\n    } else if (is.validProperty(property, value)) {\n      const rule = selector.createRule(property, value);\n      sheet.addRule(rule);\n      output.add(rule.hash);\n    }\n\n    return addEachClass(res, output);\n  });\n\n  return output;\n}\n\nfunction addEachClass(list: string[] | Set<string>, to: Set<string>) {\n  list.forEach((className) => to.add(className));\n  return to;\n}\n\nfunction cssVariablesBlock(\n  sheet: Sheet,\n  styles: CSSVariablesObject,\n  selector: Selector,\n) {\n  const classes: ClassSet = new Set<string>();\n\n  const chunkRows: string[] = [];\n  forIn(styles, (property: string, value) => {\n    if (is.validProperty(property, value)) {\n      chunkRows.push(Rule.genRule(property, value));\n      return;\n    }\n\n    const res = iterateStyles(sheet, value ?? {}, selector);\n    addEachClass(res, classes);\n  });\n\n  if (chunkRows.length) {\n    const output = chunkRows.join(' ');\n    sheet.append(\n      `${joinSelectors(\n        selector.preconditions.concat(selector.scopeClassName),\n      )} {${output}}`,\n    );\n  }\n\n  classes.add(selector.scopeClassName);\n  return classes;\n}\n\nfunction handleMediaQuery(\n  sheet: Sheet,\n  styles: Styles,\n  mediaQuery: string,\n  selector: Selector,\n) {\n  sheet.append(mediaQuery + ' {');\n\n  // iterateStyles will internally append each rule to the sheet\n  // as needed. All we have to do is just open the block and close it after.\n  const output = iterateStyles(sheet, styles, selector);\n\n  sheet.append('}');\n\n  return output;\n}\n"],"mappings":"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","names":["classes","styles","scopeClassName","name"]}