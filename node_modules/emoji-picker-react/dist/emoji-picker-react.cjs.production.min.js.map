{"version":3,"file":"emoji-picker-react.cjs.production.min.js","sources":["../src/DomUtils/classNames.ts","../src/Stylesheet/stylesheet.ts","../src/DomUtils/focusElement.ts","../src/components/context/ElementRefContext.tsx","../src/types/exposedTypes.ts","../src/config/categoryConfig.ts","../src/dataUtils/DataTypes.ts","../src/data/skinToneVariations.ts","../src/dataUtils/alphaNumericEmojiIndex.ts","../src/dataUtils/emojiSelectors.ts","../src/config/cdnUrls.ts","../src/config/config.ts","../src/components/context/PickerConfigContext.tsx","../src/config/mutableConfig.ts","../src/config/useConfig.ts","../src/hooks/useDebouncedState.ts","../src/hooks/useDisallowedEmojis.ts","../src/components/context/PickerContext.tsx","../src/hooks/useInitialLoad.ts","../src/hooks/useDisallowMouseMove.ts","../src/DomUtils/elementPositionInRow.ts","../src/DomUtils/selectors.ts","../src/dataUtils/parseNativeEmoji.ts","../src/dataUtils/suggested.ts","../src/typeRefinements/typeRefinements.ts","../src/hooks/useCloseAllOpenToggles.ts","../src/hooks/useSetVariationPicker.ts","../src/hooks/useMouseDownHandlers.ts","../src/DomUtils/scrollTo.ts","../src/hooks/useFocus.ts","../src/hooks/useFilter.ts","../src/components/atoms/Button.tsx","../src/components/emoji/ClickableEmojiButton.tsx","../src/components/emoji/emojiStyles.ts","../src/components/emoji/EmojiImg.tsx","../src/components/emoji/NativeEmoji.tsx","../src/components/emoji/ViewOnlyEmoji.tsx","../src/components/emoji/Emoji.tsx","../src/components/body/EmojiCategory.tsx","../src/components/body/Suggested.tsx","../src/components/body/EmojiList.tsx","../src/hooks/useHideEmojisByUniocode.ts","../src/hooks/useIsEmojiHidden.ts","../src/components/body/EmojiVariationPicker.tsx","../src/DomUtils/keyboardNavigation.ts","../node_modules/style-inject/dist/style-inject.es.js","../src/components/body/Body.tsx","../src/hooks/useOnScroll.ts","../src/components/Layout/Flex.tsx","../src/hooks/useShouldShowSkinTonePicker.ts","../src/components/header/SkinTonePicker.tsx","../src/components/Layout/Space.tsx","../src/components/Layout/Absolute.tsx","../src/components/Layout/Relative.tsx","../src/components/footer/Preview.tsx","../src/hooks/useEmojiPreviewEvents.ts","../src/hooks/useIsSearchMode.ts","../src/components/navigation/CategoryNavigation.tsx","../src/hooks/useScrollCategoryIntoView.ts","../src/hooks/useActiveCategoryScrollDetection.ts","../src/DomUtils/categoryNameFromDom.ts","../src/hooks/useShouldHideCustomEmojis.ts","../src/components/header/CssSearch.tsx","../src/components/header/Search.tsx","../src/hooks/useKeyboardNavigation.ts","../src/components/header/Header.tsx","../src/DomUtils/getActiveElement.ts","../src/hooks/preloadEmoji.ts","../src/components/main/PickerMain.tsx","../src/hooks/useOnFocus.ts","../src/EmojiPickerReact.tsx","../src/components/ErrorBoundary.tsx","../src/components/emoji/ExportedEmoji.tsx","../src/index.tsx"],"sourcesContent":["export enum ClassNames {\n  hiddenOnSearch = 'epr-hidden-on-search',\n  searchActive = 'epr-search-active',\n  hidden = 'epr-hidden',\n  visible = 'epr-visible',\n  active = 'epr-active',\n  emoji = 'epr-emoji',\n  category = 'epr-emoji-category',\n  label = 'epr-emoji-category-label',\n  categoryContent = 'epr-emoji-category-content',\n  emojiHasVariations = 'epr-emoji-has-variations',\n  scrollBody = 'epr-body',\n  emojiList = 'epr-emoji-list',\n  external = '__EmojiPicker__',\n  emojiPicker = 'EmojiPickerReact',\n  open = 'epr-open',\n  vertical = 'epr-vertical',\n  horizontal = 'epr-horizontal',\n  variationPicker = 'epr-emoji-variation-picker',\n  darkTheme = 'epr-dark-theme',\n  autoTheme = 'epr-auto-theme'\n}\n\nexport function asSelectors(...classNames: ClassNames[]): string {\n  return classNames.map(c => `.${c}`).join('');\n}\n","import { createSheet } from 'flairup';\n\nimport { ClassNames } from '../DomUtils/classNames';\n\nexport const stylesheet = createSheet('epr');\n\nexport const commonStyles = stylesheet.create({\n  hidden: {\n    '.': ClassNames.hidden,\n    display: 'none',\n    opacity: '0',\n    pointerEvents: 'none',\n    visibility: 'hidden'\n  },\n  hiddenOnSearch: {\n    display: 'none',\n    opacity: '0',\n    pointerEvents: 'none',\n    visibility: 'hidden'\n  }\n});\n","import { NullableElement } from './selectors';\n\nexport function focusElement(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    element.focus();\n  });\n}\n\nexport function focusPrevElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const prev = element.previousElementSibling as HTMLElement;\n\n  focusElement(prev);\n}\n\nexport function focusNextElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const next = element.nextElementSibling as HTMLElement;\n\n  focusElement(next);\n}\n\nexport function focusFirstElementChild(element: NullableElement) {\n  if (!element) return;\n\n  const first = element.firstElementChild as HTMLElement;\n\n  focusElement(first);\n}\n","import * as React from 'react';\n\nimport { focusElement } from '../../DomUtils/focusElement';\nimport { NullableElement } from '../../DomUtils/selectors';\n\nexport function ElementRefContextProvider({\n  children\n}: {\n  children: React.ReactNode;\n}) {\n  const PickerMainRef = React.useRef<HTMLElement>(null);\n  const AnchoredEmojiRef = React.useRef<HTMLElement>(null);\n  const BodyRef = React.useRef<HTMLDivElement>(null);\n  const SearchInputRef = React.useRef<HTMLInputElement>(null);\n  const SkinTonePickerRef = React.useRef<HTMLDivElement>(null);\n  const CategoryNavigationRef = React.useRef<HTMLDivElement>(null);\n  const VariationPickerRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    <ElementRefContext.Provider\n      value={{\n        AnchoredEmojiRef,\n        BodyRef,\n        CategoryNavigationRef,\n        PickerMainRef,\n        SearchInputRef,\n        SkinTonePickerRef,\n        VariationPickerRef\n      }}\n    >\n      {children}\n    </ElementRefContext.Provider>\n  );\n}\n\nexport type ElementRef<\n  E extends HTMLElement = HTMLElement\n> = React.MutableRefObject<E | null>;\n\ntype ElementRefs = {\n  PickerMainRef: ElementRef;\n  AnchoredEmojiRef: ElementRef;\n  SkinTonePickerRef: ElementRef<HTMLDivElement>;\n  SearchInputRef: ElementRef<HTMLInputElement>;\n  BodyRef: ElementRef<HTMLDivElement>;\n  CategoryNavigationRef: ElementRef<HTMLDivElement>;\n  VariationPickerRef: ElementRef<HTMLDivElement>;\n};\n\nconst ElementRefContext = React.createContext<ElementRefs>({\n  AnchoredEmojiRef: React.createRef(),\n  BodyRef: React.createRef(),\n  CategoryNavigationRef: React.createRef(),\n  PickerMainRef: React.createRef(),\n  SearchInputRef: React.createRef(),\n  SkinTonePickerRef: React.createRef(),\n  VariationPickerRef: React.createRef()\n});\n\nfunction useElementRef() {\n  return React.useContext(ElementRefContext);\n}\n\nexport function usePickerMainRef() {\n  return useElementRef()['PickerMainRef'];\n}\n\nexport function useAnchoredEmojiRef() {\n  return useElementRef()['AnchoredEmojiRef'];\n}\n\nexport function useSetAnchoredEmojiRef(): (target: NullableElement) => void {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return (target: NullableElement) => {\n    if (target === null && AnchoredEmojiRef.current !== null) {\n      focusElement(AnchoredEmojiRef.current);\n    }\n\n    AnchoredEmojiRef.current = target;\n  };\n}\n\nexport function useBodyRef() {\n  return useElementRef()['BodyRef'];\n}\n\nexport function useSearchInputRef() {\n  return useElementRef()['SearchInputRef'];\n}\n\nexport function useSkinTonePickerRef() {\n  return useElementRef()['SkinTonePickerRef'];\n}\n\nexport function useCategoryNavigationRef() {\n  return useElementRef()['CategoryNavigationRef'];\n}\n\nexport function useVariationPickerRef() {\n  return useElementRef()['VariationPickerRef'];\n}\n","export type EmojiClickData = {\n  activeSkinTone: SkinTones;\n  unified: string;\n  unifiedWithoutSkinTone: string;\n  emoji: string;\n  names: string[];\n  imageUrl: string;\n  getImageUrl: (emojiStyle?: EmojiStyle) => string;\n  isCustom: boolean;\n};\n\nexport enum SuggestionMode {\n  RECENT = 'recent',\n  FREQUENT = 'frequent'\n}\n\nexport enum EmojiStyle {\n  NATIVE = 'native',\n  APPLE = 'apple',\n  TWITTER = 'twitter',\n  GOOGLE = 'google',\n  FACEBOOK = 'facebook'\n}\n\nexport enum Theme {\n  DARK = 'dark',\n  LIGHT = 'light',\n  AUTO = 'auto'\n}\n\nexport enum SkinTones {\n  NEUTRAL = 'neutral',\n  LIGHT = '1f3fb',\n  MEDIUM_LIGHT = '1f3fc',\n  MEDIUM = '1f3fd',\n  MEDIUM_DARK = '1f3fe',\n  DARK = '1f3ff'\n}\n\nexport enum Categories {\n  SUGGESTED = 'suggested',\n  CUSTOM = 'custom',\n  SMILEYS_PEOPLE = 'smileys_people',\n  ANIMALS_NATURE = 'animals_nature',\n  FOOD_DRINK = 'food_drink',\n  TRAVEL_PLACES = 'travel_places',\n  ACTIVITIES = 'activities',\n  OBJECTS = 'objects',\n  SYMBOLS = 'symbols',\n  FLAGS = 'flags'\n}\n\nexport enum SkinTonePickerLocation {\n  SEARCH = 'SEARCH',\n  PREVIEW = 'PREVIEW'\n}\n","import { Categories, SuggestionMode } from '../types/exposedTypes';\n\nexport { Categories };\n\nconst categoriesOrdered: Categories[] = [\n  Categories.SUGGESTED,\n  Categories.CUSTOM,\n  Categories.SMILEYS_PEOPLE,\n  Categories.ANIMALS_NATURE,\n  Categories.FOOD_DRINK,\n  Categories.TRAVEL_PLACES,\n  Categories.ACTIVITIES,\n  Categories.OBJECTS,\n  Categories.SYMBOLS,\n  Categories.FLAGS\n];\n\nexport const SuggestedRecent: CategoryConfig = {\n  name: 'Recently Used',\n  category: Categories.SUGGESTED\n};\n\nexport type CustomCategoryConfig = {\n  category: Categories.CUSTOM;\n  name: string;\n};\n\nconst configByCategory: Record<Categories, CategoryConfig> = {\n  [Categories.SUGGESTED]: {\n    category: Categories.SUGGESTED,\n    name: 'Frequently Used'\n  },\n  [Categories.CUSTOM]: {\n    category: Categories.CUSTOM,\n    name: 'Custom Emojis'\n  },\n  [Categories.SMILEYS_PEOPLE]: {\n    category: Categories.SMILEYS_PEOPLE,\n    name: 'Smileys & People'\n  },\n  [Categories.ANIMALS_NATURE]: {\n    category: Categories.ANIMALS_NATURE,\n    name: 'Animals & Nature'\n  },\n  [Categories.FOOD_DRINK]: {\n    category: Categories.FOOD_DRINK,\n    name: 'Food & Drink'\n  },\n  [Categories.TRAVEL_PLACES]: {\n    category: Categories.TRAVEL_PLACES,\n    name: 'Travel & Places'\n  },\n  [Categories.ACTIVITIES]: {\n    category: Categories.ACTIVITIES,\n    name: 'Activities'\n  },\n  [Categories.OBJECTS]: {\n    category: Categories.OBJECTS,\n    name: 'Objects'\n  },\n  [Categories.SYMBOLS]: {\n    category: Categories.SYMBOLS,\n    name: 'Symbols'\n  },\n  [Categories.FLAGS]: {\n    category: Categories.FLAGS,\n    name: 'Flags'\n  }\n};\n\nexport function baseCategoriesConfig(\n  modifiers?: Record<Categories, CategoryConfig>\n): CategoriesConfig {\n  return categoriesOrdered.map(category => {\n    return {\n      ...configByCategory[category],\n      ...(modifiers && modifiers[category] && modifiers[category])\n    };\n  });\n}\n\nexport function categoryFromCategoryConfig(category: CategoryConfig) {\n  return category.category;\n}\n\nexport function categoryNameFromCategoryConfig(category: CategoryConfig) {\n  return category.name;\n}\n\nexport type CategoriesConfig = CategoryConfig[];\n\nexport type CategoryConfig = {\n  category: Categories;\n  name: string;\n};\n\nexport type UserCategoryConfig = Array<Categories | CategoryConfig>;\n\nexport function mergeCategoriesConfig(\n  userCategoriesConfig: UserCategoryConfig = [],\n  modifiers: CategoryConfigModifiers = {}\n): CategoriesConfig {\n  const extra = {} as Record<Categories, CategoryConfig>;\n\n  if (modifiers.suggestionMode === SuggestionMode.RECENT) {\n    extra[Categories.SUGGESTED] = SuggestedRecent;\n  }\n\n  const base = baseCategoriesConfig(extra);\n  if (!userCategoriesConfig?.length) {\n    return base;\n  }\n\n  return userCategoriesConfig.map(category => {\n    if (typeof category === 'string') {\n      return getBaseConfigByCategory(category, extra[category]);\n    }\n\n    return {\n      ...getBaseConfigByCategory(category.category, extra[category.category]),\n      ...category\n    };\n  });\n}\n\nfunction getBaseConfigByCategory(\n  category: Categories,\n  modifier: CategoryConfig = {} as CategoryConfig\n) {\n  return Object.assign(configByCategory[category], modifier);\n}\n\ntype CategoryConfigModifiers = {\n  suggestionMode?: SuggestionMode;\n};\n","import emojis from '../data/emojis';\n\nexport enum EmojiProperties {\n  name = 'n',\n  unified = 'u',\n  variations = 'v',\n  added_in = 'a',\n  imgUrl = 'imgUrl'\n}\n\nexport interface DataEmoji extends WithName {\n  [EmojiProperties.unified]: string;\n  [EmojiProperties.variations]?: string[];\n  [EmojiProperties.added_in]: string;\n  [EmojiProperties.imgUrl]?: string;\n}\n\nexport type DataEmojis = DataEmoji[];\n\nexport type DataGroups = keyof typeof emojis;\n\nexport type WithName = {\n  [EmojiProperties.name]: string[];\n};\n","import { SkinTones } from '../types/exposedTypes';\n\nconst skinToneVariations = [\n  SkinTones.NEUTRAL,\n  SkinTones.LIGHT,\n  SkinTones.MEDIUM_LIGHT,\n  SkinTones.MEDIUM,\n  SkinTones.MEDIUM_DARK,\n  SkinTones.DARK\n];\n\nexport const skinTonesNamed = Object.entries(SkinTones).reduce(\n  (acc, [key, value]) => {\n    acc[value] = key;\n    return acc;\n  },\n  {} as Record<string, string>\n);\n\nexport const skinTonesMapped: Record<\n  string,\n  string\n> = skinToneVariations.reduce(\n  (mapped, skinTone) =>\n    Object.assign(mapped, {\n      [skinTone]: skinTone\n    }),\n  {}\n);\n\nexport default skinToneVariations;\n","import { DataEmoji } from './DataTypes';\nimport { allEmojis, emojiNames, emojiUnified } from './emojiSelectors';\n\nexport const alphaNumericEmojiIndex: BaseIndex = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((searchIndex, emoji) => {\n    indexEmoji(emoji);\n    return searchIndex;\n  }, alphaNumericEmojiIndex as BaseIndex);\n});\n\ntype BaseIndex = Record<string, Record<string, DataEmoji>>;\n\nexport function indexEmoji(emoji: DataEmoji): void {\n  const joinedNameString = emojiNames(emoji)\n    .flat()\n    .join('')\n    .toLowerCase()\n    .replace(/[^a-zA-Z\\d]/g, '')\n    .split('');\n\n  joinedNameString.forEach(char => {\n    alphaNumericEmojiIndex[char] = alphaNumericEmojiIndex[char] ?? {};\n\n    alphaNumericEmojiIndex[char][emojiUnified(emoji)] = emoji;\n  });\n}\n","import { Categories } from '../config/categoryConfig';\nimport { cdnUrl } from '../config/cdnUrls';\nimport { CustomEmoji } from '../config/customEmojiConfig';\nimport emojis from '../data/emojis';\nimport skinToneVariations, {\n  skinTonesMapped\n} from '../data/skinToneVariations';\nimport { EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { DataEmoji, DataEmojis, EmojiProperties, WithName } from './DataTypes';\nimport { indexEmoji } from './alphaNumericEmojiIndex';\n\nexport function emojiNames(emoji: WithName): string[] {\n  return emoji[EmojiProperties.name] ?? [];\n}\n\nexport function addedIn(emoji: DataEmoji): number {\n  return parseFloat(emoji[EmojiProperties.added_in]);\n}\n\nexport function emojiName(emoji?: WithName): string {\n  if (!emoji) {\n    return '';\n  }\n\n  return emojiNames(emoji)[0];\n}\n\nexport function unifiedWithoutSkinTone(unified: string): string {\n  const splat = unified.split('-');\n  const [skinTone] = splat.splice(1, 1);\n\n  if (skinTonesMapped[skinTone]) {\n    return splat.join('-');\n  }\n\n  return unified;\n}\n\nexport function emojiUnified(emoji: DataEmoji, skinTone?: string): string {\n  const unified = emoji[EmojiProperties.unified];\n\n  if (!skinTone || !emojiHasVariations(emoji)) {\n    return unified;\n  }\n\n  return emojiVariationUnified(emoji, skinTone) ?? unified;\n}\n\nexport function emojisByCategory(category: Categories): DataEmojis {\n  // @ts-ignore\n  return emojis?.[category] ?? [];\n}\n\n// WARNING: DO NOT USE DIRECTLY\nexport function emojiUrlByUnified(\n  unified: string,\n  emojiStyle: EmojiStyle\n): string {\n  return `${cdnUrl(emojiStyle)}${unified}.png`;\n}\n\nexport function emojiVariations(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.variations] ?? [];\n}\n\nexport function emojiHasVariations(emoji: DataEmoji): boolean {\n  return emojiVariations(emoji).length > 0;\n}\n\nexport function emojiVariationUnified(\n  emoji: DataEmoji,\n  skinTone?: string\n): string | undefined {\n  return skinTone\n    ? emojiVariations(emoji).find(variation => variation.includes(skinTone))\n    : emojiUnified(emoji);\n}\n\nexport function emojiByUnified(unified?: string): DataEmoji | undefined {\n  if (!unified) {\n    return;\n  }\n\n  if (allEmojisByUnified[unified]) {\n    return allEmojisByUnified[unified];\n  }\n\n  const withoutSkinTone = unifiedWithoutSkinTone(unified);\n  return allEmojisByUnified[withoutSkinTone];\n}\n\nexport const allEmojis: DataEmojis = Object.values(emojis).flat();\n\nexport function setCustomEmojis(customEmojis: CustomEmoji[]): void {\n  emojis[Categories.CUSTOM].length = 0;\n\n  customEmojis.forEach(emoji => {\n    const emojiData = customToRegularEmoji(emoji);\n\n    emojis[Categories.CUSTOM].push(emojiData as never);\n\n    if (allEmojisByUnified[emojiData[EmojiProperties.unified]]) {\n      return;\n    }\n\n    allEmojis.push(emojiData);\n    allEmojisByUnified[emojiData[EmojiProperties.unified]] = emojiData;\n    indexEmoji(emojiData);\n  });\n}\n\nfunction customToRegularEmoji(emoji: CustomEmoji): DataEmoji {\n  return {\n    [EmojiProperties.name]: emoji.names.map(name => name.toLowerCase()),\n    [EmojiProperties.unified]: emoji.id.toLowerCase(),\n    [EmojiProperties.added_in]: '0',\n    [EmojiProperties.imgUrl]: emoji.imgUrl\n  };\n}\n\nconst allEmojisByUnified: {\n  [unified: string]: DataEmoji;\n} = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((allEmojis, Emoji) => {\n    allEmojis[emojiUnified(Emoji)] = Emoji;\n\n    if (emojiHasVariations(Emoji)) {\n      emojiVariations(Emoji).forEach(variation => {\n        allEmojis[variation] = Emoji;\n      });\n    }\n\n    return allEmojis;\n  }, allEmojisByUnified);\n});\n\nexport function activeVariationFromUnified(unified: string): SkinTones | null {\n  const [, suspectedSkinTone] = unified.split('-') as [string, SkinTones];\n  return skinToneVariations.includes(suspectedSkinTone)\n    ? suspectedSkinTone\n    : null;\n}\n","import { EmojiStyle } from '../types/exposedTypes';\n\nconst CDN_URL_APPLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-apple/img/apple/64/';\nconst CDN_URL_FACEBOOK =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-facebook/img/facebook/64/';\nconst CDN_URL_TWITTER =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-twitter/img/twitter/64/';\nconst CDN_URL_GOOGLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-google/img/google/64/';\n\nexport function cdnUrl(emojiStyle: EmojiStyle): string {\n  switch (emojiStyle) {\n    case EmojiStyle.TWITTER:\n      return CDN_URL_TWITTER;\n    case EmojiStyle.GOOGLE:\n      return CDN_URL_GOOGLE;\n    case EmojiStyle.FACEBOOK:\n      return CDN_URL_FACEBOOK;\n    case EmojiStyle.APPLE:\n    default:\n      return CDN_URL_APPLE;\n  }\n}\n","import * as React from 'react'\n\nimport { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport {\n  setCustomEmojis,\n  emojiUrlByUnified\n} from '../dataUtils/emojiSelectors';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport {\n  CategoriesConfig,\n  baseCategoriesConfig,\n  mergeCategoriesConfig\n} from './categoryConfig';\nimport { CustomEmoji } from './customEmojiConfig';\n\nconst KNOWN_FAILING_EMOJIS = ['2640-fe0f', '2642-fe0f', '2695-fe0f'];\n\nexport const DEFAULT_SEARCH_PLACEHOLDER = 'Search';\nexport const SEARCH_RESULTS_NO_RESULTS_FOUND = 'No results found';\nexport const SEARCH_RESULTS_SUFFIX =\n  ' found. Use up and down arrow keys to navigate.';\nexport const SEARCH_RESULTS_ONE_RESULT_FOUND =\n  '1 result' + SEARCH_RESULTS_SUFFIX;\nexport const SEARCH_RESULTS_MULTIPLE_RESULTS_FOUND =\n  '%n results' + SEARCH_RESULTS_SUFFIX;\n\nexport function mergeConfig(\n  userConfig: PickerConfig = {}\n): PickerConfigInternal {\n  const base = basePickerConfig();\n\n  const previewConfig = Object.assign(\n    base.previewConfig,\n    userConfig.previewConfig ?? {}\n  );\n  const config = Object.assign(base, userConfig);\n\n  const categories = mergeCategoriesConfig(userConfig.categories, {\n    suggestionMode: config.suggestedEmojisMode\n  });\n\n  setCustomEmojis(config.customEmojis ?? []);\n\n  const skinTonePickerLocation = config.searchDisabled\n    ? SkinTonePickerLocation.PREVIEW\n    : config.skinTonePickerLocation;\n\n  return {\n    ...config,\n    categories,\n    previewConfig,\n    skinTonePickerLocation\n  };\n}\n\nexport function basePickerConfig(): PickerConfigInternal {\n  return {\n    autoFocusSearch: true,\n    categories: baseCategoriesConfig(),\n    className: '',\n    customEmojis: [],\n    defaultSkinTone: SkinTones.NEUTRAL,\n    emojiStyle: EmojiStyle.APPLE,\n    emojiVersion: null,\n    getEmojiUrl: emojiUrlByUnified,\n    height: 450,\n    lazyLoadEmojis: false,\n    previewConfig: {\n      ...basePreviewConfig\n    },\n    searchDisabled: false,\n    searchPlaceHolder: DEFAULT_SEARCH_PLACEHOLDER,\n    searchPlaceholder: DEFAULT_SEARCH_PLACEHOLDER,\n    skinTonePickerLocation: SkinTonePickerLocation.SEARCH,\n    skinTonesDisabled: false,\n    style: {},\n    suggestedEmojisMode: SuggestionMode.FREQUENT,\n    theme: Theme.LIGHT,\n    unicodeToHide: new Set<string>(KNOWN_FAILING_EMOJIS),\n    width: 350\n  };\n}\n\nexport type PickerConfigInternal = {\n  emojiVersion: string | null;\n  searchPlaceHolder: string;\n  searchPlaceholder: string;\n  defaultSkinTone: SkinTones;\n  skinTonesDisabled: boolean;\n  autoFocusSearch: boolean;\n  emojiStyle: EmojiStyle;\n  categories: CategoriesConfig;\n  theme: Theme;\n  suggestedEmojisMode: SuggestionMode;\n  lazyLoadEmojis: boolean;\n  previewConfig: PreviewConfig;\n  className: string;\n  height: PickerDimensions;\n  width: PickerDimensions;\n  style: React.CSSProperties;\n  getEmojiUrl: GetEmojiUrl;\n  searchDisabled: boolean;\n  skinTonePickerLocation: SkinTonePickerLocation;\n  unicodeToHide: Set<string>;\n  customEmojis: CustomEmoji[];\n};\n\nexport type PreviewConfig = {\n  defaultEmoji: string;\n  defaultCaption: string;\n  showPreview: boolean;\n};\n\nconst basePreviewConfig: PreviewConfig = {\n  defaultEmoji: '1f60a',\n  defaultCaption: \"What's your mood?\",\n  showPreview: true\n};\n\ntype ConfigExternal = {\n  previewConfig: Partial<PreviewConfig>;\n  onEmojiClick: (emoji: EmojiClickData, event: MouseEvent) => void;\n} & Omit<PickerConfigInternal, 'previewConfig' | 'unicodeToHide'>;\n\nexport type PickerConfig = Partial<ConfigExternal>;\n\nexport type PickerDimensions = string | number;\n","import * as React from 'react';\n\nimport {\n  basePickerConfig,\n  mergeConfig,\n  PickerConfig,\n  PickerConfigInternal\n} from '../../config/config';\n\ntype Props = PickerConfig &\n  Readonly<{\n    children: React.ReactNode;\n  }>;\n\nconst ConfigContext = React.createContext<PickerConfigInternal>(\n  basePickerConfig()\n);\n\nexport function PickerConfigProvider({ children, ...config }: Props) {\n  const mergedConfig = useSetConfig(config);\n\n  return (\n    <ConfigContext.Provider value={mergedConfig}>\n      {children}\n    </ConfigContext.Provider>\n  );\n}\n\nexport function useSetConfig(config: PickerConfig) {\n  const [mergedConfig, setMergedConfig] = React.useState(() =>\n    mergeConfig(config)\n  );\n\n  React.useEffect(() => {\n    if (config.customEmojis?.length !== mergedConfig.customEmojis?.length) {\n      setMergedConfig(mergeConfig(config));\n    }\n    // not gonna...\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [config.customEmojis?.length]);\n\n  return mergedConfig;\n}\n\nexport function usePickerConfig() {\n  return React.useContext(ConfigContext);\n}\n","import React from 'react';\n\nimport { EmojiClickData } from '../types/exposedTypes';\n\nexport type MutableConfig = {\n  onEmojiClick?: (emoji: EmojiClickData, event: MouseEvent) => void;\n};\n\nexport const MutableConfigContext = React.createContext<\n  React.MutableRefObject<MutableConfig>\n>({} as React.MutableRefObject<MutableConfig>);\n\nexport function useMutableConfig(): React.MutableRefObject<MutableConfig> {\n  const mutableConfig = React.useContext(MutableConfigContext);\n  return mutableConfig;\n}\n\nexport function useDefineMutableConfig(\n  config: MutableConfig\n): React.MutableRefObject<MutableConfig> {\n  const MutableConfigRef = React.useRef<MutableConfig>({\n    onEmojiClick: config.onEmojiClick || emptyFunc\n  });\n\n  React.useEffect(() => {\n    MutableConfigRef.current.onEmojiClick = config.onEmojiClick || emptyFunc;\n  }, [config.onEmojiClick]);\n\n  return MutableConfigRef;\n}\n\nfunction emptyFunc() {}\n","import * as React from 'react';\n\nimport { usePickerConfig } from '../components/context/PickerConfigContext';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport { CategoriesConfig } from './categoryConfig';\nimport {\n  DEFAULT_SEARCH_PLACEHOLDER,\n  SEARCH_RESULTS_NO_RESULTS_FOUND,\n  SEARCH_RESULTS_ONE_RESULT_FOUND,\n  SEARCH_RESULTS_MULTIPLE_RESULTS_FOUND,\n  PickerDimensions,\n  PreviewConfig\n} from './config';\nimport { CustomEmoji } from './customEmojiConfig';\nimport { useMutableConfig } from './mutableConfig';\n\nexport function useSearchPlaceHolderConfig(): string {\n  const { searchPlaceHolder, searchPlaceholder } = usePickerConfig();\n  return (\n    [searchPlaceHolder, searchPlaceholder].find(\n      p => p !== DEFAULT_SEARCH_PLACEHOLDER\n    ) ?? DEFAULT_SEARCH_PLACEHOLDER\n  );\n}\n\nexport function useDefaultSkinToneConfig(): SkinTones {\n  const { defaultSkinTone } = usePickerConfig();\n  return defaultSkinTone;\n}\n\nexport function useSkinTonesDisabledConfig(): boolean {\n  const { skinTonesDisabled } = usePickerConfig();\n  return skinTonesDisabled;\n}\n\nexport function useEmojiStyleConfig(): EmojiStyle {\n  const { emojiStyle } = usePickerConfig();\n  return emojiStyle;\n}\n\nexport function useAutoFocusSearchConfig(): boolean {\n  const { autoFocusSearch } = usePickerConfig();\n  return autoFocusSearch;\n}\n\nexport function useCategoriesConfig(): CategoriesConfig {\n  const { categories } = usePickerConfig();\n  return categories;\n}\n\nexport function useCustomEmojisConfig(): CustomEmoji[] {\n  const { customEmojis } = usePickerConfig();\n  return customEmojis;\n}\n\nexport function useOnEmojiClickConfig(): (\n  emoji: EmojiClickData,\n  event: MouseEvent\n) => void {\n  const { current } = useMutableConfig();\n  return current.onEmojiClick || (() => {});\n}\n\nexport function usePreviewConfig(): PreviewConfig {\n  const { previewConfig } = usePickerConfig();\n  return previewConfig;\n}\n\nexport function useThemeConfig(): Theme {\n  const { theme } = usePickerConfig();\n\n  return theme;\n}\n\nexport function useSuggestedEmojisModeConfig(): SuggestionMode {\n  const { suggestedEmojisMode } = usePickerConfig();\n  return suggestedEmojisMode;\n}\n\nexport function useLazyLoadEmojisConfig(): boolean {\n  const { lazyLoadEmojis } = usePickerConfig();\n  return lazyLoadEmojis;\n}\n\nexport function useClassNameConfig(): string {\n  const { className } = usePickerConfig();\n  return className;\n}\n\nexport function useStyleConfig(): React.CSSProperties {\n  const { height, width, style } = usePickerConfig();\n  return { height: getDimension(height), width: getDimension(width), ...style };\n}\n\nexport function useEmojiVersionConfig(): string | null {\n  const { emojiVersion } = usePickerConfig();\n  return emojiVersion;\n}\n\nexport function useSearchDisabledConfig(): boolean {\n  const { searchDisabled } = usePickerConfig();\n  return searchDisabled;\n}\n\nexport function useSkinTonePickerLocationConfig(): SkinTonePickerLocation {\n  const { skinTonePickerLocation } = usePickerConfig();\n  return skinTonePickerLocation;\n}\n\nexport function useUnicodeToHide() {\n  const { unicodeToHide } = usePickerConfig();\n  return unicodeToHide;\n}\n\nexport function useGetEmojiUrlConfig(): (\n  unified: string,\n  style: EmojiStyle\n) => string {\n  const { getEmojiUrl } = usePickerConfig();\n  return getEmojiUrl;\n}\n\nfunction getDimension(dimensionConfig: PickerDimensions): PickerDimensions {\n  return typeof dimensionConfig === 'number'\n    ? `${dimensionConfig}px`\n    : dimensionConfig;\n}\n\nexport function useSearchResultsConfig(searchResultsCount: number): string {\n  const hasResults = searchResultsCount > 0;\n  const isPlural = searchResultsCount > 1;\n\n  if (hasResults) {\n    return isPlural ?\n      SEARCH_RESULTS_MULTIPLE_RESULTS_FOUND.replace('%n', searchResultsCount.toString())\n        : SEARCH_RESULTS_ONE_RESULT_FOUND;\n  }\n\n  return SEARCH_RESULTS_NO_RESULTS_FOUND;\n}\n","import { useRef, useState } from 'react';\n\nexport function useDebouncedState<T>(\n  initialValue: T,\n  delay: number = 0\n): [T, (value: T) => Promise<T>] {\n  const [state, setState] = useState<T>(initialValue);\n  const timer = useRef<number | null>(null);\n\n  function debouncedSetState(value: T) {\n    return new Promise<T>(resolve => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = window?.setTimeout(() => {\n        setState(value);\n        resolve(value);\n      }, delay);\n    });\n  }\n\n  return [state, debouncedSetState];\n}\n","import { useRef, useMemo } from 'react';\n\nimport { useEmojiVersionConfig } from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  addedIn,\n  allEmojis,\n  emojiUnified,\n  unifiedWithoutSkinTone\n} from '../dataUtils/emojiSelectors';\n\nimport { useIsUnicodeHidden } from './useHideEmojisByUniocode';\n\nexport function useDisallowedEmojis() {\n  const DisallowedEmojisRef = useRef<Record<string, boolean>>({});\n  const emojiVersionConfig = useEmojiVersionConfig();\n\n  return useMemo(() => {\n    const emojiVersion = parseFloat(`${emojiVersionConfig}`);\n\n    if (!emojiVersionConfig || Number.isNaN(emojiVersion)) {\n      return DisallowedEmojisRef.current;\n    }\n\n    return allEmojis.reduce((disallowedEmojis, emoji) => {\n      if (addedInNewerVersion(emoji, emojiVersion)) {\n        disallowedEmojis[emojiUnified(emoji)] = true;\n      }\n\n      return disallowedEmojis;\n    }, DisallowedEmojisRef.current);\n  }, [emojiVersionConfig]);\n}\n\nexport function useIsEmojiDisallowed() {\n  const disallowedEmojis = useDisallowedEmojis();\n  const isUnicodeHidden = useIsUnicodeHidden();\n\n  return function isEmojiDisallowed(emoji: DataEmoji) {\n    const unified = unifiedWithoutSkinTone(emojiUnified(emoji));\n\n    return Boolean(disallowedEmojis[unified] || isUnicodeHidden(unified));\n  };\n}\n\nfunction addedInNewerVersion(\n  emoji: DataEmoji,\n  supportedLevel: number\n): boolean {\n  return addedIn(emoji) > supportedLevel;\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport { useDefaultSkinToneConfig } from '../../config/useConfig';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { alphaNumericEmojiIndex } from '../../dataUtils/alphaNumericEmojiIndex';\nimport { useDebouncedState } from '../../hooks/useDebouncedState';\nimport { useDisallowedEmojis } from '../../hooks/useDisallowedEmojis';\nimport { FilterDict } from '../../hooks/useFilter';\nimport { useMarkInitialLoad } from '../../hooks/useInitialLoad';\nimport { SkinTones } from '../../types/exposedTypes';\n\nexport function PickerContextProvider({ children }: Props) {\n  const disallowedEmojis = useDisallowedEmojis();\n  const defaultSkinTone = useDefaultSkinToneConfig();\n\n  // Initialize the filter with the inititial dictionary\n  const filterRef = React.useRef<FilterState>(alphaNumericEmojiIndex);\n  const disallowClickRef = React.useRef<boolean>(false);\n  const disallowMouseRef = React.useRef<boolean>(false);\n  const disallowedEmojisRef = React.useRef<Record<string, boolean>>(\n    disallowedEmojis\n  );\n\n  const suggestedUpdateState = useDebouncedState(Date.now(), 200);\n  const searchTerm = useDebouncedState('', 100);\n  const skinToneFanOpenState = useState<boolean>(false);\n  const activeSkinTone = useState<SkinTones>(defaultSkinTone);\n  const activeCategoryState = useState<ActiveCategoryState>(null);\n  const emojisThatFailedToLoadState = useState<Set<string>>(new Set());\n  const emojiVariationPickerState = useState<DataEmoji | null>(null);\n  const [isPastInitialLoad, setIsPastInitialLoad] = useState(false);\n\n  useMarkInitialLoad(setIsPastInitialLoad);\n\n  return (\n    <PickerContext.Provider\n      value={{\n        activeCategoryState,\n        activeSkinTone,\n        disallowClickRef,\n        disallowMouseRef,\n        disallowedEmojisRef,\n        emojiVariationPickerState,\n        emojisThatFailedToLoadState,\n        filterRef,\n        isPastInitialLoad,\n        searchTerm,\n        skinToneFanOpenState,\n        suggestedUpdateState\n      }}\n    >\n      {children}\n    </PickerContext.Provider>\n  );\n}\n\ntype ReactState<T> = [T, React.Dispatch<React.SetStateAction<T>>];\n\nconst PickerContext = React.createContext<{\n  searchTerm: [string, (term: string) => Promise<string>];\n  suggestedUpdateState: [number, (term: number) => void];\n  activeCategoryState: ReactState<ActiveCategoryState>;\n  activeSkinTone: ReactState<SkinTones>;\n  emojisThatFailedToLoadState: ReactState<Set<string>>;\n  isPastInitialLoad: boolean;\n  emojiVariationPickerState: ReactState<DataEmoji | null>;\n  skinToneFanOpenState: ReactState<boolean>;\n  filterRef: React.MutableRefObject<FilterState>;\n  disallowClickRef: React.MutableRefObject<boolean>;\n  disallowMouseRef: React.MutableRefObject<boolean>;\n  disallowedEmojisRef: React.MutableRefObject<Record<string, boolean>>;\n}>({\n  activeCategoryState: [null, () => {}],\n  activeSkinTone: [SkinTones.NEUTRAL, () => {}],\n  disallowClickRef: { current: false },\n  disallowMouseRef: { current: false },\n  disallowedEmojisRef: { current: {} },\n  emojiVariationPickerState: [null, () => {}],\n  emojisThatFailedToLoadState: [new Set(), () => {}],\n  filterRef: { current: {} },\n  isPastInitialLoad: true,\n  searchTerm: ['', () => new Promise<string>(() => undefined)],\n  skinToneFanOpenState: [false, () => {}],\n  suggestedUpdateState: [Date.now(), () => {}]\n});\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport function useFilterRef() {\n  const { filterRef } = React.useContext(PickerContext);\n  return filterRef;\n}\n\nexport function useDisallowClickRef() {\n  const { disallowClickRef } = React.useContext(PickerContext);\n  return disallowClickRef;\n}\n\nexport function useDisallowMouseRef() {\n  const { disallowMouseRef } = React.useContext(PickerContext);\n  return disallowMouseRef;\n}\n\nexport function useSearchTermState() {\n  const { searchTerm } = React.useContext(PickerContext);\n  return searchTerm;\n}\n\nexport function useActiveSkinToneState(): [\n  SkinTones,\n  (skinTone: SkinTones) => void\n] {\n  const { activeSkinTone } = React.useContext(PickerContext);\n  return activeSkinTone;\n}\n\nexport function useEmojisThatFailedToLoadState() {\n  const { emojisThatFailedToLoadState } = React.useContext(PickerContext);\n  return emojisThatFailedToLoadState;\n}\n\nexport function useIsPastInitialLoad(): boolean {\n  const { isPastInitialLoad } = React.useContext(PickerContext);\n  return isPastInitialLoad;\n}\n\nexport function useEmojiVariationPickerState() {\n  const { emojiVariationPickerState } = React.useContext(PickerContext);\n  return emojiVariationPickerState;\n}\n\nexport function useSkinToneFanOpenState() {\n  const { skinToneFanOpenState } = React.useContext(PickerContext);\n  return skinToneFanOpenState;\n}\n\nexport function useDisallowedEmojisRef() {\n  const { disallowedEmojisRef } = React.useContext(PickerContext);\n  return disallowedEmojisRef;\n}\n\nexport function useUpdateSuggested(): [number, () => void] {\n  const { suggestedUpdateState } = React.useContext(PickerContext);\n\n  const [suggestedUpdated, setsuggestedUpdate] = suggestedUpdateState;\n  return [\n    suggestedUpdated,\n    function updateSuggested() {\n      setsuggestedUpdate(Date.now());\n    }\n  ];\n}\n\nexport type FilterState = Record<string, FilterDict>;\n\ntype ActiveCategoryState = null | string;\n","import { useEffect } from 'react';\nimport * as React from 'react';\n\nexport function useMarkInitialLoad(\n  dispatch: React.Dispatch<React.SetStateAction<boolean>>\n) {\n  useEffect(() => {\n    dispatch(true);\n  }, [dispatch]);\n}\n","import { useEffect } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useDisallowMouseRef } from '../components/context/PickerContext';\n\nexport function useDisallowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function disallowMouseMove() {\n    DisallowMouseRef.current = true;\n  };\n}\n\nexport function useAllowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function allowMouseMove() {\n    DisallowMouseRef.current = false;\n  };\n}\n\nexport function useIsMouseDisallowed() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function isMouseDisallowed() {\n    return DisallowMouseRef.current;\n  };\n}\n\nexport function useOnMouseMove() {\n  const BodyRef = useBodyRef();\n  const allowMouseMove = useAllowMouseMove();\n  const isMouseDisallowed = useIsMouseDisallowed();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    bodyRef?.addEventListener('mousemove', onMouseMove, {\n      passive: true\n    });\n\n    function onMouseMove() {\n      if (isMouseDisallowed()) {\n        allowMouseMove();\n      }\n    }\n    return () => {\n      bodyRef?.removeEventListener('mousemove', onMouseMove);\n    };\n  }, [BodyRef, allowMouseMove, isMouseDisallowed]);\n}\n","import { NullableElement } from './selectors';\n\nexport function elementCountInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const parentWidth = parent.getBoundingClientRect().width;\n  const elementWidth = element.getBoundingClientRect().width;\n  return Math.floor(parentWidth / elementWidth);\n}\n\nexport function elementIndexInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementWidth = element.getBoundingClientRect().width;\n  const elementLeft = element.getBoundingClientRect().left;\n  const parentLeft = parent.getBoundingClientRect().left;\n\n  return Math.floor((elementLeft - parentLeft) / elementWidth);\n}\n\nexport function rowNumber(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  return Math.round((elementTop - parentTop) / elementHeight);\n}\n\nexport function hasNextRow(\n  parent: NullableElement,\n  element: NullableElement\n): boolean {\n  if (!parent || !element) {\n    return false;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentHeight = parent.getBoundingClientRect().height;\n\n  return Math.round(elementTop - parentTop + elementHeight) < parentHeight;\n}\n\nfunction getRowElements(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number\n): HTMLElement[] {\n  if (row === -1) {\n    const lastRow = Math.floor((elements.length - 1) / elementsInRow);\n    const firstElementIndex = lastRow * elementsInRow;\n    const lastElementIndex = elements.length - 1;\n    return elements.slice(firstElementIndex, lastElementIndex + 1);\n  }\n\n  return elements.slice(row * elementsInRow, (row + 1) * elementsInRow);\n}\n\nfunction getNextRowElements(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number\n): HTMLElement[] {\n  const nextRow = currentRow + 1;\n\n  if (nextRow * elementsInRow > allElements.length) {\n    return [];\n  }\n\n  return getRowElements(allElements, nextRow, elementsInRow);\n}\n\nexport function getElementInRow(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number,\n  indexInRow: number\n): NullableElement {\n  const rowElements = getRowElements(elements, row, elementsInRow);\n  // get element, default to last\n  return rowElements[indexInRow] || rowElements[rowElements.length - 1] || null;\n}\n\nexport function getElementInNextRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const nextRowElements = getNextRowElements(\n    allElements,\n    currentRow,\n    elementsInRow\n  );\n\n  // return item in index, or last item in row\n  return (\n    nextRowElements[index] ||\n    nextRowElements[nextRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function getElementInPrevRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const prevRowElements = getRowElements(\n    allElements,\n    currentRow - 1,\n    elementsInRow\n  );\n\n  // default to last\n  return (\n    prevRowElements[index] ||\n    prevRowElements[prevRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function firstVisibleElementInContainer(\n  parent: NullableElement,\n  elements: HTMLElement[]\n): NullableElement {\n  if (!parent || !elements.length) {\n    return null;\n  }\n\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentBottom = parent.getBoundingClientRect().bottom;\n\n  const visibleElements = elements.find(element => {\n    const elementTop = element.getBoundingClientRect().top;\n    const elementBottom = element.getBoundingClientRect().bottom;\n\n    return (\n      (elementTop >= parentTop && elementTop <= parentBottom) ||\n      (elementBottom >= parentTop && elementBottom <= parentBottom)\n    );\n  });\n\n  return visibleElements || null;\n}\n\nexport function hasNextElementSibling(element: HTMLElement) {\n  return !!element.nextElementSibling;\n}\n","import { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  unifiedWithoutSkinTone\n} from '../dataUtils/emojiSelectors';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport { firstVisibleElementInContainer } from './elementPositionInRow';\n\nexport type NullableElement = HTMLElement | null;\n\nexport const EmojiButtonSelector = `button${asSelectors(ClassNames.emoji)}`;\nexport const VisibleEmojiSelector = [\n  EmojiButtonSelector,\n  asSelectors(ClassNames.visible),\n  `:not(${asSelectors(ClassNames.hidden)})`\n].join('');\n\nexport function buttonFromTarget(\n  emojiElement: NullableElement\n): HTMLButtonElement | null {\n  return emojiElement?.closest(EmojiButtonSelector) ?? null;\n}\n\nexport function isEmojiButton(element: NullableElement): boolean {\n  if (!element) {\n    return false;\n  }\n\n  return element.matches(EmojiButtonSelector);\n}\n\nexport function emojiFromElement(\n  element: NullableElement\n): [DataEmoji, string] | [] {\n  const originalUnified = originalUnifiedFromEmojiElement(element);\n  const unified = unifiedFromEmojiElement(element);\n\n  if (!originalUnified) {\n    return [];\n  }\n\n  const emoji = emojiByUnified(unified ?? originalUnified);\n\n  if (!emoji) {\n    return [];\n  }\n\n  return [emoji, unified as string];\n}\n\nexport function isEmojiElement(element: NullableElement): boolean {\n  return Boolean(\n    element?.matches(EmojiButtonSelector) ||\n      element?.parentElement?.matches(EmojiButtonSelector)\n  );\n}\n\nexport function categoryLabelFromCategory(\n  category: NullableElement\n): NullableElement {\n  return category?.querySelector(asSelectors(ClassNames.label)) ?? null;\n}\n\nexport function closestCategoryLabel(\n  element: NullableElement\n): NullableElement {\n  const category = closestCategory(element);\n  return categoryLabelFromCategory(category);\n}\n\nexport function elementHeight(element: NullableElement): number {\n  return element?.clientHeight ?? 0;\n}\n\nexport function emojiTrueOffsetTop(element: NullableElement): number {\n  if (!element) {\n    return 0;\n  }\n\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  // compensate for the label height\n  const labelHeight = categoryLabelHeight(category);\n\n  return elementOffsetTop(button) + elementOffsetTop(category) + labelHeight;\n}\n\nexport function categoryLabelHeight(category: NullableElement): number {\n  if (!category) {\n    return 0;\n  }\n\n  const categoryWithoutLabel = category.querySelector(\n    asSelectors(ClassNames.categoryContent)\n  );\n\n  return (\n    (category?.clientHeight ?? 0) - (categoryWithoutLabel?.clientHeight ?? 0)\n  );\n}\n\nexport function isEmojiBehindLabel(emoji: NullableElement): boolean {\n  if (!emoji) {\n    return false;\n  }\n\n  return (\n    emojiDistanceFromScrollTop(emoji) <\n    categoryLabelHeight(closestCategory(emoji))\n  );\n}\n\nexport function queryScrollBody(root: NullableElement): NullableElement {\n  if (!root) return null;\n\n  return root.matches(asSelectors(ClassNames.scrollBody))\n    ? root\n    : root.querySelector(asSelectors(ClassNames.scrollBody));\n}\n\nexport function emojiDistanceFromScrollTop(emoji: NullableElement): number {\n  if (!emoji) {\n    return 0;\n  }\n\n  return emojiTrueOffsetTop(emoji) - (closestScrollBody(emoji)?.scrollTop ?? 0);\n}\n\nexport function closestScrollBody(element: NullableElement): NullableElement {\n  if (!element) {\n    return null;\n  }\n\n  return element.closest(asSelectors(ClassNames.scrollBody)) ?? null;\n}\n\nexport function emojiTruOffsetLeft(element: NullableElement): number {\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  return elementOffsetLeft(button) + elementOffsetLeft(category);\n}\n\nfunction elementOffsetTop(element: NullableElement): number {\n  return element?.offsetTop ?? 0;\n}\n\nfunction elementOffsetLeft(element: NullableElement): number {\n  return element?.offsetLeft ?? 0;\n}\n\nexport function unifiedFromEmojiElement(emoji: NullableElement): string | null {\n  return elementDataSetKey(buttonFromTarget(emoji), 'unified') ?? null;\n}\n\nexport function originalUnifiedFromEmojiElement(\n  emoji: NullableElement\n): string | null {\n  const unified = unifiedFromEmojiElement(emoji);\n\n  if (unified) {\n    return unifiedWithoutSkinTone(unified);\n  }\n  return null;\n}\n\nfunction elementDataSetKey(\n  element: NullableElement,\n  key: string\n): string | null {\n  return elementDataSet(element)[key] ?? null;\n}\n\nfunction elementDataSet(element: NullableElement): DOMStringMap {\n  return element?.dataset ?? {};\n}\n\nexport function isVisibleEmoji(element: HTMLElement) {\n  return element.classList.contains(ClassNames.visible);\n}\n\nexport function isHidden(element: NullableElement) {\n  if (!element) return true;\n\n  return element.classList.contains(ClassNames.hidden);\n}\n\nexport function allVisibleEmojis(parent: NullableElement) {\n  if (!parent) {\n    return [];\n  }\n\n  return Array.from(\n    parent.querySelectorAll(VisibleEmojiSelector)\n  ) as HTMLElement[];\n}\n\nexport function lastVisibleEmoji(element: NullableElement): NullableElement {\n  if (!element) return null;\n\n  const allEmojis = allVisibleEmojis(element);\n  const [last] = allEmojis.slice(-1);\n  if (!last) {\n    return null;\n  }\n\n  if (!isVisibleEmoji(last)) {\n    return prevVisibleEmoji(last);\n  }\n\n  return last;\n}\n\nexport function nextVisibleEmoji(element: HTMLElement): NullableElement {\n  const next = element.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return firstVisibleEmoji(nextCategory(element));\n  }\n\n  if (!isVisibleEmoji(next)) {\n    return nextVisibleEmoji(next);\n  }\n\n  return next;\n}\n\nexport function prevVisibleEmoji(element: HTMLElement): NullableElement {\n  const prev = element.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return lastVisibleEmoji(prevCategory(element));\n  }\n\n  if (!isVisibleEmoji(prev)) {\n    return prevVisibleEmoji(prev);\n  }\n\n  return prev;\n}\n\nexport function firstVisibleEmoji(parent: NullableElement) {\n  if (!parent) {\n    return null;\n  }\n\n  const allEmojis = allVisibleEmojis(parent);\n\n  return firstVisibleElementInContainer(parent, allEmojis);\n}\n\nexport function prevCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const prev = category.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return null;\n  }\n\n  if (isHidden(prev)) {\n    return prevCategory(prev);\n  }\n\n  return prev;\n}\n\nexport function nextCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const next = category.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return null;\n  }\n\n  if (isHidden(next)) {\n    return nextCategory(next);\n  }\n\n  return next;\n}\n\nexport function closestCategory(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(asSelectors(ClassNames.category)) as HTMLElement;\n}\n\nexport function closestCategoryContent(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(\n    asSelectors(ClassNames.categoryContent)\n  ) as HTMLElement;\n}\n","export function parseNativeEmoji(unified: string): string {\n  return unified\n    .split('-')\n    .map(hex => String.fromCodePoint(parseInt(hex, 16)))\n    .join('');\n}\n","import { SkinTones, SuggestionMode } from '../types/exposedTypes';\n\nimport { DataEmoji } from './DataTypes';\nimport { emojiUnified } from './emojiSelectors';\n\nconst SUGGESTED_LS_KEY = 'epr_suggested';\n\ntype SuggestedItem = {\n  unified: string;\n  original: string;\n  count: number;\n};\n\ntype Suggested = SuggestedItem[];\n\nexport function getSuggested(mode?: SuggestionMode): Suggested {\n  try {\n    if (!window?.localStorage) {\n      return [];\n    }\n    const recent = JSON.parse(\n      window?.localStorage.getItem(SUGGESTED_LS_KEY) ?? '[]'\n    ) as Suggested;\n\n    if (mode === SuggestionMode.FREQUENT) {\n      return recent.sort((a, b) => b.count - a.count);\n    }\n\n    return recent;\n  } catch {\n    return [];\n  }\n}\n\nexport function setSuggested(emoji: DataEmoji, skinTone: SkinTones) {\n  const recent = getSuggested();\n\n  const unified = emojiUnified(emoji, skinTone);\n  const originalUnified = emojiUnified(emoji);\n\n  let existing = recent.find(({ unified: u }) => u === unified);\n\n  let nextList: SuggestedItem[];\n\n  if (existing) {\n    nextList = [existing].concat(recent.filter(i => i !== existing));\n  } else {\n    existing = {\n      unified,\n      original: originalUnified,\n      count: 0\n    };\n    nextList = [existing, ...recent];\n  }\n\n  existing.count++;\n\n  nextList.length = Math.min(nextList.length, 14);\n\n  try {\n    window?.localStorage.setItem(SUGGESTED_LS_KEY, JSON.stringify(nextList));\n    // Prevents the change from being seen immediately.\n  } catch {\n    // ignore\n  }\n}\n","import {\n  Categories,\n  CategoryConfig,\n  CustomCategoryConfig\n} from '../config/categoryConfig';\nimport { CustomEmoji } from '../config/customEmojiConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\n\nexport function isCustomCategory(\n  category: CategoryConfig | CustomCategoryConfig\n): category is CustomCategoryConfig {\n  return category.category === Categories.CUSTOM;\n}\n\nexport function isCustomEmoji(emoji: Partial<DataEmoji>): emoji is CustomEmoji {\n  return emoji.imgUrl !== undefined;\n}\n","import { useCallback } from 'react';\n\nimport {\n  useEmojiVariationPickerState,\n  useSkinToneFanOpenState\n} from '../components/context/PickerContext';\n\nexport function useCloseAllOpenToggles() {\n  const [variationPicker, setVariationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen, setSkinToneFanOpen] = useSkinToneFanOpenState();\n\n  const closeAllOpenToggles = useCallback(() => {\n    if (variationPicker) {\n      setVariationPicker(null);\n    }\n\n    if (skinToneFanOpen) {\n      setSkinToneFanOpen(false);\n    }\n  }, [\n    variationPicker,\n    skinToneFanOpen,\n    setVariationPicker,\n    setSkinToneFanOpen\n  ]);\n\n  return closeAllOpenToggles;\n}\n\nexport function useHasOpenToggles() {\n  const [variationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen] = useSkinToneFanOpenState();\n\n  return function hasOpenToggles() {\n    return !!variationPicker || skinToneFanOpen;\n  };\n}\n","import { emojiFromElement, NullableElement } from '../DomUtils/selectors';\nimport { useSetAnchoredEmojiRef } from '../components/context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../components/context/PickerContext';\n\nexport default function useSetVariationPicker() {\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n\n  return function setVariationPicker(element: NullableElement) {\n    const [emoji] = emojiFromElement(element);\n\n    if (emoji) {\n      setAnchoredEmojiRef(element);\n      setEmojiVariationPicker(emoji);\n    }\n  };\n}\n","import * as React from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport {\n  emojiFromElement,\n  isEmojiElement,\n  NullableElement\n} from '../DomUtils/selectors';\nimport {\n  useActiveSkinToneState,\n  useDisallowClickRef,\n  useEmojiVariationPickerState,\n  useUpdateSuggested\n} from '../components/context/PickerContext';\nimport { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useOnEmojiClickConfig\n} from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  activeVariationFromUnified,\n  emojiHasVariations,\n  emojiNames,\n  emojiUnified\n} from '../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../dataUtils/parseNativeEmoji';\nimport { setSuggested } from '../dataUtils/suggested';\nimport { isCustomEmoji } from '../typeRefinements/typeRefinements';\nimport { EmojiClickData, SkinTones, EmojiStyle } from '../types/exposedTypes';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\nimport useSetVariationPicker from './useSetVariationPicker';\n\nexport function useMouseDownHandlers(\n  BodyRef: React.MutableRefObject<NullableElement>\n) {\n  const mouseDownTimerRef = useRef<undefined | number>();\n  const setVariationPicker = useSetVariationPicker();\n  const disallowClickRef = useDisallowClickRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const onEmojiClick = useOnEmojiClickConfig();\n  const [, updateSuggested] = useUpdateSuggested();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const activeEmojiStyle = useEmojiStyleConfig();\n\n  const onClick = React.useCallback(\n    function onClick(event: MouseEvent) {\n      if (disallowClickRef.current) {\n        return;\n      }\n\n      closeAllOpenToggles();\n\n      const [emoji, unified] = emojiFromEvent(event);\n\n      if (!emoji || !unified) {\n        return;\n      }\n\n      const skinToneToUse =\n        activeVariationFromUnified(unified) || activeSkinTone;\n\n      updateSuggested();\n      setSuggested(emoji, skinToneToUse);\n      onEmojiClick(\n        emojiClickOutput(emoji, skinToneToUse, activeEmojiStyle, getEmojiUrl),\n        event\n      );\n    },\n    [\n      activeSkinTone,\n      closeAllOpenToggles,\n      disallowClickRef,\n      onEmojiClick,\n      updateSuggested,\n      getEmojiUrl,\n      activeEmojiStyle\n    ]\n  );\n\n  const onMouseDown = React.useCallback(\n    function onMouseDown(event: MouseEvent) {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n      }\n\n      const [emoji] = emojiFromEvent(event);\n\n      if (!emoji || !emojiHasVariations(emoji)) {\n        return;\n      }\n\n      mouseDownTimerRef.current = window?.setTimeout(() => {\n        disallowClickRef.current = true;\n        mouseDownTimerRef.current = undefined;\n        closeAllOpenToggles();\n        setVariationPicker(event.target as HTMLElement);\n        setEmojiVariationPicker(emoji);\n      }, 500);\n    },\n    [\n      disallowClickRef,\n      closeAllOpenToggles,\n      setVariationPicker,\n      setEmojiVariationPicker\n    ]\n  );\n  const onMouseUp = React.useCallback(\n    function onMouseUp() {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n        mouseDownTimerRef.current = undefined;\n      } else if (disallowClickRef.current) {\n        // The problem we're trying to overcome here\n        // is that the emoji has both mouseup and click events\n        // and when releasing a mouseup event\n        // the click gets triggered too\n        // So we're disallowing the click event for a short time\n\n        requestAnimationFrame(() => {\n          disallowClickRef.current = false;\n        });\n      }\n    },\n    [disallowClickRef]\n  );\n\n  useEffect(() => {\n    if (!BodyRef.current) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n    bodyRef.addEventListener('click', onClick, {\n      passive: true\n    });\n\n    bodyRef.addEventListener('mousedown', onMouseDown, {\n      passive: true\n    });\n    bodyRef.addEventListener('mouseup', onMouseUp, {\n      passive: true\n    });\n\n    return () => {\n      bodyRef?.removeEventListener('click', onClick);\n      bodyRef?.removeEventListener('mousedown', onMouseDown);\n      bodyRef?.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [BodyRef, onClick, onMouseDown, onMouseUp]);\n}\n\nfunction emojiFromEvent(event: MouseEvent): [DataEmoji, string] | [] {\n  const target = event?.target as HTMLElement;\n  if (!isEmojiElement(target)) {\n    return [];\n  }\n\n  return emojiFromElement(target);\n}\n\nfunction emojiClickOutput(\n  emoji: DataEmoji,\n  activeSkinTone: SkinTones,\n  activeEmojiStyle: EmojiStyle,\n  getEmojiUrl: GetEmojiUrl\n): EmojiClickData {\n  const names = emojiNames(emoji);\n\n  if (isCustomEmoji(emoji)) {\n    const unified = emojiUnified(emoji);\n    return {\n      activeSkinTone,\n      emoji: unified,\n      getImageUrl() {\n        return emoji.imgUrl;\n      },\n      imageUrl: emoji.imgUrl,\n      isCustom: true,\n      names,\n      unified,\n      unifiedWithoutSkinTone: unified\n    };\n  }\n  const unified = emojiUnified(emoji, activeSkinTone);\n\n  return {\n    activeSkinTone,\n    emoji: parseNativeEmoji(unified),\n    getImageUrl(emojiStyle: EmojiStyle = activeEmojiStyle ?? EmojiStyle.APPLE) {\n      return getEmojiUrl(unified, emojiStyle);\n    },\n    imageUrl: getEmojiUrl(unified, activeEmojiStyle ?? EmojiStyle.APPLE),\n    isCustom: false,\n    names,\n    unified,\n    unifiedWithoutSkinTone: emojiUnified(emoji)\n  };\n}\n","import { useCallback } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport {\n  categoryLabelHeight,\n  closestCategory,\n  closestScrollBody,\n  emojiDistanceFromScrollTop,\n  isEmojiBehindLabel,\n  NullableElement,\n  queryScrollBody\n} from './selectors';\n\nexport function scrollTo(root: NullableElement, top: number = 0) {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = top + 1;\n  });\n}\n\nexport function scrollBy(root: NullableElement, by: number): void {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = $eprBody.scrollTop + by;\n  });\n}\n\nexport function useScrollTo() {\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    (top: number) => {\n      requestAnimationFrame(() => {\n        if (BodyRef.current) {\n          BodyRef.current.scrollTop = top;\n        }\n      });\n    },\n    [BodyRef]\n  );\n}\n\nexport function scrollEmojiAboveLabel(emoji: NullableElement) {\n  if (!emoji || !isEmojiBehindLabel(emoji)) {\n    return;\n  }\n\n  if (emoji.closest(asSelectors(ClassNames.variationPicker))) {\n    return;\n  }\n\n  const scrollBody = closestScrollBody(emoji);\n  const by = emojiDistanceFromScrollTop(emoji);\n  scrollBy(scrollBody, -(categoryLabelHeight(closestCategory(emoji)) - by));\n}\n","import { useCallback } from 'react';\n\nimport { focusElement, focusFirstElementChild } from '../DomUtils/focusElement';\nimport {\n  useCategoryNavigationRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\n\nexport function useFocusSearchInput() {\n  const SearchInputRef = useSearchInputRef();\n\n  return useCallback(() => {\n    focusElement(SearchInputRef.current);\n  }, [SearchInputRef]);\n}\n\nexport function useFocusSkinTonePicker() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n\n  return useCallback(() => {\n    if (!SkinTonePickerRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(SkinTonePickerRef.current);\n  }, [SkinTonePickerRef]);\n}\n\nexport function useFocusCategoryNavigation() {\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return useCallback(() => {\n    if (!CategoryNavigationRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(CategoryNavigationRef.current);\n  }, [CategoryNavigationRef]);\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport {\n  usePickerMainRef,\n  useSearchInputRef\n} from '../components/context/ElementRefContext';\nimport {\n  FilterState,\n  useFilterRef,\n  useSearchTermState\n} from '../components/context/PickerContext';\nimport { useSearchResultsConfig } from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiNames } from '../dataUtils/emojiSelectors';\n\nimport { useFocusSearchInput } from './useFocus';\n\nfunction useSetFilterRef() {\n  const filterRef = useFilterRef();\n\n  return function setFilter(\n    setter: FilterState | ((current: FilterState) => FilterState)\n  ): void {\n    if (typeof setter === 'function') {\n      return setFilter(setter(filterRef.current));\n    }\n\n    filterRef.current = setter;\n  };\n}\n\nexport function useClearSearch() {\n  const applySearch = useApplySearch();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n\n  return function clearSearch() {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = '';\n    }\n\n    applySearch('');\n    focusSearchInput();\n  };\n}\n\nexport function useAppendSearch() {\n  const SearchInputRef = useSearchInputRef();\n  const applySearch = useApplySearch();\n\n  return function appendSearch(str: string) {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = `${SearchInputRef.current.value}${str}`;\n      applySearch(getNormalizedSearchTerm(SearchInputRef.current.value));\n    } else {\n      applySearch(getNormalizedSearchTerm(str));\n    }\n  };\n}\n\nexport function useFilter() {\n  const SearchInputRef = useSearchInputRef();\n  const filterRef = useFilterRef();\n  const setFilterRef = useSetFilterRef();\n  const applySearch = useApplySearch();\n\n  const [searchTerm] = useSearchTermState();\n  const statusSearchResults = getStatusSearchResults(\n    filterRef.current,\n    searchTerm\n  );\n\n  return {\n    onChange,\n    searchTerm,\n    SearchInputRef,\n    statusSearchResults\n  };\n\n  function onChange(inputValue: string) {\n    const filter = filterRef.current;\n\n    const nextValue = inputValue.toLowerCase();\n\n    if (filter?.[nextValue] || nextValue.length <= 1) {\n      return applySearch(nextValue);\n    }\n\n    const longestMatch = findLongestMatch(nextValue, filter);\n\n    if (!longestMatch) {\n      // Can we even get here?\n      // If so, we need to search among all emojis\n      return applySearch(nextValue);\n    }\n\n    setFilterRef(current =>\n      Object.assign(current, {\n        [nextValue]: filterEmojiObjectByKeyword(longestMatch, nextValue)\n      })\n    );\n    applySearch(nextValue);\n  }\n}\n\nfunction useApplySearch() {\n  const [, setSearchTerm] = useSearchTermState();\n  const PickerMainRef = usePickerMainRef();\n\n  return function applySearch(searchTerm: string) {\n    requestAnimationFrame(() => {\n      setSearchTerm(searchTerm ? searchTerm?.toLowerCase() : searchTerm).then(\n        () => {\n          scrollTo(PickerMainRef.current, 0);\n        }\n      );\n    });\n  };\n}\n\nfunction filterEmojiObjectByKeyword(\n  emojis: FilterDict,\n  keyword: string\n): FilterDict {\n  const filtered: FilterDict = {};\n\n  for (const unified in emojis) {\n    const emoji = emojis[unified];\n\n    if (hasMatch(emoji, keyword)) {\n      filtered[unified] = emoji;\n    }\n  }\n\n  return filtered;\n}\n\nfunction hasMatch(emoji: DataEmoji, keyword: string): boolean {\n  return emojiNames(emoji).some(name => name.includes(keyword));\n}\n\nexport function useIsEmojiFiltered(): (unified: string) => boolean {\n  const { current: filter } = useFilterRef();\n  const [searchTerm] = useSearchTermState();\n\n  return unified => isEmojiFilteredBySearchTerm(unified, filter, searchTerm);\n}\n\nfunction isEmojiFilteredBySearchTerm(\n  unified: string,\n  filter: FilterState,\n  searchTerm: string\n): boolean {\n  if (!filter || !searchTerm) {\n    return false;\n  }\n\n  return !filter[searchTerm]?.[unified];\n}\n\nexport type FilterDict = Record<string, DataEmoji>;\n\nfunction findLongestMatch(\n  keyword: string,\n  dict: Record<string, FilterDict> | null\n): FilterDict | null {\n  if (!dict) {\n    return null;\n  }\n\n  if (dict[keyword]) {\n    return dict[keyword];\n  }\n\n  const longestMatchingKey = Object.keys(dict)\n    .sort((a, b) => b.length - a.length)\n    .find(key => keyword.includes(key));\n\n  if (longestMatchingKey) {\n    return dict[longestMatchingKey];\n  }\n\n  return null;\n}\n\nexport function getNormalizedSearchTerm(str: string): string {\n  if (!str || typeof str !== 'string') {\n    return '';\n  }\n\n  return str.trim().toLowerCase();\n}\n\nfunction getStatusSearchResults(\n  filterState: FilterState,\n  searchTerm: string\n): string {\n  if (!filterState?.[searchTerm]) return '';\n\n  const searchResultsCount =\n    Object.entries(filterState?.[searchTerm])?.length || 0;\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useSearchResultsConfig(searchResultsCount);\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\nimport { stylesheet } from '../../Stylesheet/stylesheet';\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  className?: string;\n}\n\nexport function Button(props: Props) {\n  return (\n    <button\n      type=\"button\"\n      {...props}\n      className={cx(styles.button, props.className)}\n    >\n      {props.children}\n    </button>\n  );\n}\n\nconst styles = stylesheet.create({\n  button: {\n    '.': 'epr-btn',\n    cursor: 'pointer',\n    border: '0',\n    background: 'none',\n    outline: 'none'\n  }\n});\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { commonStyles, stylesheet } from '../../Stylesheet/stylesheet';\nimport { Button } from '../atoms/Button';\n\ntype ClickableEmojiButtonProps = Readonly<{\n  hidden?: boolean;\n  showVariations?: boolean;\n  hiddenOnSearch?: boolean;\n  emojiNames: string[];\n  children: React.ReactNode;\n  hasVariations: boolean;\n  unified?: string;\n}>;\n\nexport function ClickableEmojiButton({\n  emojiNames,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  showVariations = true,\n  hasVariations,\n  children\n}: ClickableEmojiButtonProps) {\n  return (\n    <Button\n      className={cx(\n        styles.emoji,\n        hidden && commonStyles.hidden,\n        hiddenOnSearch && commonStyles.hiddenOnSearch,\n        {\n          [ClassNames.visible]: !hidden && !hiddenOnSearch\n        },\n        !!(hasVariations && showVariations) && styles.hasVariations\n      )}\n      data-unified={unified}\n      aria-label={emojiNames[0]}\n      data-full-name={emojiNames}\n    >\n      {children}\n    </Button>\n  );\n}\n\nconst styles = stylesheet.create({\n  emoji: {\n    '.': ClassNames.emoji,\n    position: 'relative',\n    width: 'var(--epr-emoji-fullsize)',\n    height: 'var(--epr-emoji-fullsize)',\n    boxSizing: 'border-box',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    maxWidth: 'var(--epr-emoji-fullsize)',\n    maxHeight: 'var(--epr-emoji-fullsize)',\n    borderRadius: '8px',\n    overflow: 'hidden',\n    transition: 'background-color 0.2s',\n    ':hover': {\n      backgroundColor: 'var(--epr-emoji-hover-color)'\n    },\n    ':focus': {\n      backgroundColor: 'var(--epr-focus-bg-color)'\n    }\n  },\n  hasVariations: {\n    '.': ClassNames.emojiHasVariations,\n    ':after': {\n      content: '',\n      display: 'block',\n      width: '0',\n      height: '0',\n      right: '0px',\n      bottom: '1px',\n      position: 'absolute',\n      borderLeft: '4px solid transparent',\n      borderRight: '4px solid transparent',\n      transform: 'rotate(135deg)',\n      borderBottom: '4px solid var(--epr-emoji-variation-indicator-color)',\n      zIndex: 'var(--epr-emoji-variations-indictator-z-index)'\n    },\n    ':hover:after': {\n      borderBottom: '4px solid var(--epr-emoji-variation-indicator-color-hover)'\n    }\n  }\n});\n","import { ClassNames } from '../../DomUtils/classNames';\nimport { stylesheet } from '../../Stylesheet/stylesheet';\n\nexport const emojiStyles = stylesheet.create({\n  external: {\n    '.': ClassNames.external,\n    fontSize: '0'\n  },\n  common: {\n    alignSelf: 'center',\n    justifySelf: 'center',\n    display: 'block'\n  }\n});\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\nimport { stylesheet } from '../../Stylesheet/stylesheet';\nimport { EmojiStyle } from '../../types/exposedTypes';\n\nimport { emojiStyles } from './emojiStyles';\n\nexport function EmojiImg({\n  emojiName,\n  style,\n  lazyLoad = false,\n  imgUrl,\n  onError\n}: {\n  emojiName: string;\n  emojiStyle: EmojiStyle;\n  style: React.CSSProperties;\n  lazyLoad?: boolean;\n  imgUrl: string;\n  onError: () => void;\n}) {\n  return (\n    <img\n      src={imgUrl}\n      alt={emojiName}\n      className={cx(styles.emojiImag, emojiStyles.external, emojiStyles.common)}\n      loading={lazyLoad ? 'lazy' : 'eager'}\n      onError={onError}\n      style={style}\n    />\n  );\n}\n\nconst styles = stylesheet.create({\n  emojiImag: {\n    '.': 'epr-emoji-img',\n    maxWidth: 'var(--epr-emoji-fullsize)',\n    maxHeight: 'var(--epr-emoji-fullsize)',\n    minWidth: 'var(--epr-emoji-fullsize)',\n    minHeight: 'var(--epr-emoji-fullsize)',\n    padding: 'var(--epr-emoji-padding)'\n  }\n});\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\nimport { stylesheet } from '../../Stylesheet/stylesheet';\nimport { parseNativeEmoji } from '../../dataUtils/parseNativeEmoji';\n\nimport { emojiStyles } from './emojiStyles';\n\nexport function NativeEmoji({\n  unified,\n  style\n}: {\n  unified: string;\n  style: React.CSSProperties;\n}) {\n  return (\n    <span\n      className={cx(\n        styles.nativeEmoji,\n        emojiStyles.common,\n        emojiStyles.external\n      )}\n      data-unified={unified}\n      style={style}\n    >\n      {parseNativeEmoji(unified)}\n    </span>\n  );\n}\n\nconst styles = stylesheet.create({\n  nativeEmoji: {\n    '.': 'epr-emoji-native',\n    fontFamily:\n      '\"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Segoe UI\", \"Apple Color Emoji\", \"Twemoji Mozilla\", \"Noto Color Emoji\", \"EmojiOne Color\", \"Android Emoji\"!important',\n    position: 'relative',\n    lineHeight: '100%',\n    fontSize: 'var(--epr-emoji-size)',\n    textAlign: 'center',\n    alignSelf: 'center',\n    justifySelf: 'center',\n    letterSpacing: '0',\n    padding: 'var(--epr-emoji-padding)'\n  }\n});\n","import * as React from 'react';\n\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUrlByUnified\n} from '../../dataUtils/emojiSelectors';\nimport { isCustomEmoji } from '../../typeRefinements/typeRefinements';\nimport { EmojiStyle } from '../../types/exposedTypes';\nimport { useEmojisThatFailedToLoadState } from '../context/PickerContext';\n\nimport { BaseEmojiProps } from './BaseEmojiProps';\nimport { EmojiImg } from './EmojiImg';\nimport { NativeEmoji } from './NativeEmoji';\n\nexport function ViewOnlyEmoji({\n  emoji,\n  unified,\n  emojiStyle,\n  size,\n  lazyLoad,\n  getEmojiUrl = emojiUrlByUnified\n}: BaseEmojiProps) {\n  const [, setEmojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n\n  const style = {} as React.CSSProperties;\n  if (size) {\n    style.width = style.height = style.fontSize = `${size}px`;\n  }\n\n  const emojiToRender = emoji ? emoji : emojiByUnified(unified);\n\n  if (!emojiToRender) {\n    return null;\n  }\n\n  if (isCustomEmoji(emojiToRender)) {\n    return (\n      <EmojiImg\n        style={style}\n        emojiName={unified}\n        emojiStyle={EmojiStyle.NATIVE}\n        lazyLoad={lazyLoad}\n        imgUrl={emojiToRender.imgUrl}\n        onError={onError}\n      />\n    );\n  }\n\n  return (\n    <>\n      {emojiStyle === EmojiStyle.NATIVE ? (\n        <NativeEmoji unified={unified} style={style} />\n      ) : (\n        <EmojiImg\n          style={style}\n          emojiName={emojiName(emojiToRender)}\n          emojiStyle={emojiStyle}\n          lazyLoad={lazyLoad}\n          imgUrl={getEmojiUrl(unified, emojiStyle)}\n          onError={onError}\n        />\n      )}\n    </>\n  );\n\n  function onError() {\n    setEmojisThatFailedToLoad(prev => new Set(prev).add(unified));\n  }\n}\n","import * as React from 'react';\n\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { emojiHasVariations, emojiNames } from '../../dataUtils/emojiSelectors';\n\nimport { BaseEmojiProps } from './BaseEmojiProps';\nimport { ClickableEmojiButton } from './ClickableEmojiButton';\nimport { ViewOnlyEmoji } from './ViewOnlyEmoji';\n\ntype ClickableEmojiProps = Readonly<\n  BaseEmojiProps & {\n    hidden?: boolean;\n    showVariations?: boolean;\n    hiddenOnSearch?: boolean;\n    emoji: DataEmoji;\n    className?: string;\n  }\n>;\n\nexport function ClickableEmoji({\n  emoji,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  emojiStyle,\n  showVariations = true,\n  size,\n  lazyLoad,\n  getEmojiUrl\n}: ClickableEmojiProps) {\n  const hasVariations = emojiHasVariations(emoji);\n\n  return (\n    <ClickableEmojiButton\n      hasVariations={hasVariations}\n      showVariations={showVariations}\n      hidden={hidden}\n      hiddenOnSearch={hiddenOnSearch}\n      emojiNames={emojiNames(emoji)}\n      unified={unified}\n    >\n      <ViewOnlyEmoji\n        unified={unified}\n        emoji={emoji}\n        size={size}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoad}\n        getEmojiUrl={getEmojiUrl}\n      />\n    </ClickableEmojiButton>\n  );\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { commonStyles, stylesheet } from '../../Stylesheet/stylesheet';\nimport {\n  CategoryConfig,\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n  children?: React.ReactNode;\n  hidden?: boolean;\n  hiddenOnSearch?: boolean;\n}>;\n\nexport function EmojiCategory({\n  categoryConfig,\n  children,\n  hidden,\n  hiddenOnSearch\n}: Props) {\n  const category = categoryFromCategoryConfig(categoryConfig);\n  const categoryName = categoryNameFromCategoryConfig(categoryConfig);\n\n  return (\n    <li\n      className={cx(\n        styles.category,\n        hidden && commonStyles.hidden,\n        hiddenOnSearch && commonStyles.hiddenOnSearch\n      )}\n      data-name={category}\n      aria-label={categoryName}\n    >\n      <h2 className={cx(styles.label)}>{categoryName}</h2>\n      <div className={cx(styles.categoryContent)}>{children}</div>\n    </li>\n  );\n}\n\nconst styles = stylesheet.create({\n  category: {\n    '.': ClassNames.category,\n    ':not(:has(.epr-visible))': {\n      display: 'none'\n    }\n  },\n  categoryContent: {\n    '.': ClassNames.categoryContent,\n    display: 'grid',\n    gridGap: '0',\n    gridTemplateColumns: 'repeat(auto-fill, var(--epr-emoji-fullsize))',\n    justifyContent: 'space-between',\n    margin: 'var(--epr-category-padding)',\n    position: 'relative'\n  },\n  label: {\n    '.': ClassNames.label,\n    alignItems: 'center',\n    // @ts-expect-error - backdropFilter is a valid CSS property\n    backdropFilter: 'blur(3px)',\n    backgroundColor: 'var(--epr-category-label-bg-color)',\n    color: 'var(--epr-category-label-text-color)',\n    display: 'flex',\n    fontSize: '16px',\n    fontWeight: 'bold',\n    height: 'var(--epr-category-label-height)',\n    margin: '0',\n    padding: 'var(--epr-category-label-padding)',\n    position: 'sticky',\n    textTransform: 'capitalize',\n    top: '0',\n    width: '100%',\n    zIndex: 'var(--epr-category-label-z-index)'\n  }\n});\n","import * as React from 'react';\n\nimport { CategoryConfig } from '../../config/categoryConfig';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useSuggestedEmojisModeConfig,\n} from '../../config/useConfig';\nimport { emojiByUnified } from '../../dataUtils/emojiSelectors';\nimport { getSuggested } from '../../dataUtils/suggested';\nimport { useUpdateSuggested } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n}>;\n\nexport function Suggested({ categoryConfig }: Props) {\n  const [suggestedUpdated] = useUpdateSuggested();\n  const suggestedEmojisModeConfig = useSuggestedEmojisModeConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const suggested = React.useMemo(\n    () => getSuggested(suggestedEmojisModeConfig) ?? [],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [suggestedUpdated, suggestedEmojisModeConfig]\n  );\n  const emojiStyle = useEmojiStyleConfig();\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      hiddenOnSearch\n      hidden={suggested.length === 0}\n    >\n      {suggested.map((suggestedItem) => {\n        const emoji = emojiByUnified(suggestedItem.original);\n\n        if (!emoji) {\n          return null;\n        }\n\n        return (\n          <ClickableEmoji\n            showVariations={false}\n            unified={suggestedItem.unified}\n            emojiStyle={emojiStyle}\n            emoji={emoji}\n            key={suggestedItem.unified}\n            getEmojiUrl={getEmojiUrl}\n          />\n        );\n      })}\n    </EmojiCategory>\n  );\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { stylesheet } from '../../Stylesheet/stylesheet';\nimport {\n  Categories,\n  CategoryConfig,\n  categoryFromCategoryConfig\n} from '../../config/categoryConfig';\nimport {\n  useCategoriesConfig,\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useLazyLoadEmojisConfig,\n  useSkinTonesDisabledConfig\n} from '../../config/useConfig';\nimport { emojisByCategory, emojiUnified } from '../../dataUtils/emojiSelectors';\nimport { useIsEmojiDisallowed } from '../../hooks/useDisallowedEmojis';\nimport { useIsEmojiHidden } from '../../hooks/useIsEmojiHidden';\nimport {\n  useActiveSkinToneState,\n  useIsPastInitialLoad\n} from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\nimport { Suggested } from './Suggested';\n\nexport function EmojiList() {\n  const categories = useCategoriesConfig();\n  const renderdCategoriesCountRef = React.useRef(0);\n\n  return (\n    <ul className={cx(styles.emojiList)}>\n      {categories.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n\n        if (category === Categories.SUGGESTED) {\n          return <Suggested key={category} categoryConfig={categoryConfig} />;\n        }\n\n        return (\n          <RenderCategory\n            key={category}\n            category={category}\n            categoryConfig={categoryConfig}\n            renderdCategoriesCountRef={renderdCategoriesCountRef}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction RenderCategory({\n  category,\n  categoryConfig,\n  renderdCategoriesCountRef\n}: {\n  category: Categories;\n  categoryConfig: CategoryConfig;\n  renderdCategoriesCountRef: React.MutableRefObject<number>;\n}) {\n  const isEmojiHidden = useIsEmojiHidden();\n  const lazyLoadEmojis = useLazyLoadEmojisConfig();\n  const emojiStyle = useEmojiStyleConfig();\n  const isPastInitialLoad = useIsPastInitialLoad();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const isEmojiDisallowed = useIsEmojiDisallowed();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const showVariations = !useSkinTonesDisabledConfig();\n\n  // Small trick to defer the rendering of all emoji categories until the first category is visible\n  // This way the user gets to actually see something and not wait for the whole picker to render.\n  const emojisToPush =\n    !isPastInitialLoad && renderdCategoriesCountRef.current > 0\n      ? []\n      : emojisByCategory(category);\n\n  if (emojisToPush.length > 0) {\n    renderdCategoriesCountRef.current++;\n  }\n\n  let hiddenCounter = 0;\n\n  const emojis = emojisToPush.map(emoji => {\n    const unified = emojiUnified(emoji, activeSkinTone);\n    const { failedToLoad, filteredOut, hidden } = isEmojiHidden(emoji);\n\n    const isDisallowed = isEmojiDisallowed(emoji);\n\n    if (hidden || isDisallowed) {\n      hiddenCounter++;\n    }\n\n    if (isDisallowed) {\n      return null;\n    }\n\n    return (\n      <ClickableEmoji\n        showVariations={showVariations}\n        key={unified}\n        emoji={emoji}\n        unified={unified}\n        hidden={failedToLoad}\n        hiddenOnSearch={filteredOut}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoadEmojis}\n        getEmojiUrl={getEmojiUrl}\n      />\n    );\n  });\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      // Indicates that there are no visible emojis\n      // Hence, the category should be hidden\n      hidden={hiddenCounter === emojis.length}\n    >\n      {emojis}\n    </EmojiCategory>\n  );\n}\n\nconst styles = stylesheet.create({\n  emojiList: {\n    '.': ClassNames.emojiList,\n    listStyle: 'none',\n    margin: '0',\n    padding: '0'\n  }\n});\n","import { useUnicodeToHide } from \"../config/useConfig\";\n\nexport function useIsUnicodeHidden() {\n    const unicodeToHide = useUnicodeToHide();\n    return (emojiUnified: string) => unicodeToHide.has(emojiUnified);\n  }\n","import { useEmojisThatFailedToLoadState } from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified } from '../dataUtils/emojiSelectors';\n\nimport { useIsEmojiFiltered } from './useFilter';\n\nexport function useIsEmojiHidden(): (emoji: DataEmoji) => IsHiddenReturn {\n  const [emojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n  const isEmojiFiltered = useIsEmojiFiltered();\n\n  return (emoji: DataEmoji): IsHiddenReturn => {\n    const unified = emojiUnified(emoji);\n\n    const failedToLoad = emojisThatFailedToLoad.has(unified);\n    const filteredOut = isEmojiFiltered(unified);\n\n    return {\n      failedToLoad,\n      filteredOut,\n      hidden: failedToLoad || filteredOut\n    };\n  };\n}\n\ntype IsHiddenReturn = {\n  failedToLoad: boolean;\n  filteredOut: boolean;\n  hidden: boolean;\n};\n","import { cx } from 'flairup';\nimport * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { focusFirstVisibleEmoji } from '../../DomUtils/keyboardNavigation';\nimport {\n  buttonFromTarget,\n  elementHeight,\n  emojiTrueOffsetTop,\n  emojiTruOffsetLeft\n} from '../../DomUtils/selectors';\nimport { stylesheet } from '../../Stylesheet/stylesheet';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig\n} from '../../config/useConfig';\nimport {\n  emojiHasVariations,\n  emojiUnified,\n  emojiVariations\n} from '../../dataUtils/emojiSelectors';\nimport {\n  useAnchoredEmojiRef,\n  useBodyRef,\n  useSetAnchoredEmojiRef,\n  useVariationPickerRef\n} from '../context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport './EmojiVariationPicker.css';\n\nenum Direction {\n  Up,\n  Down\n}\n\n// eslint-disable-next-line complexity\nexport function EmojiVariationPicker() {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const VariationPickerRef = useVariationPickerRef();\n  const [emoji] = useEmojiVariationPickerState();\n  const emojiStyle = useEmojiStyleConfig();\n\n  const { getTop, getMenuDirection } = useVariationPickerTop(\n    VariationPickerRef\n  );\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const getPointerStyle = usePointerStyle(VariationPickerRef);\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n  const visible = Boolean(\n    emoji &&\n      button &&\n      emojiHasVariations(emoji) &&\n      button.classList.contains(ClassNames.emojiHasVariations)\n  );\n\n  useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    focusFirstVisibleEmoji(VariationPickerRef.current);\n  }, [VariationPickerRef, visible, AnchoredEmojiRef]);\n\n  let top, pointerStyle;\n\n  if (!visible && AnchoredEmojiRef.current) {\n    setAnchoredEmojiRef(null);\n  } else {\n    top = getTop();\n    pointerStyle = getPointerStyle();\n  }\n\n  return (\n    <div\n      ref={VariationPickerRef}\n      className={cx(\n        styles.variationPicker,\n        getMenuDirection() === Direction.Down && styles.pointingUp,\n        visible && styles.visible\n      )}\n      style={{ top }}\n    >\n      {visible && emoji\n        ? [emojiUnified(emoji)]\n            .concat(emojiVariations(emoji))\n            .slice(0, 6)\n            .map(unified => (\n              <ClickableEmoji\n                key={unified}\n                emoji={emoji}\n                unified={unified}\n                emojiStyle={emojiStyle}\n                showVariations={false}\n                getEmojiUrl={getEmojiUrl}\n              />\n            ))\n        : null}\n      <div className={cx(styles.pointer)} style={pointerStyle} />\n    </div>\n  );\n}\n\nfunction usePointerStyle(VariationPickerRef: React.RefObject<HTMLElement>) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return function getPointerStyle() {\n    const style: React.CSSProperties = {};\n    if (!VariationPickerRef.current) {\n      return style;\n    }\n\n    if (AnchoredEmojiRef.current) {\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const offsetLeft = emojiTruOffsetLeft(button);\n\n      if (!button) {\n        return style;\n      }\n\n      // half of the button\n      style.left = offsetLeft + button?.clientWidth / 2;\n    }\n\n    return style;\n  };\n}\n\nfunction useVariationPickerTop(\n  VariationPickerRef: React.RefObject<HTMLElement>\n) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const BodyRef = useBodyRef();\n  let direction = Direction.Up;\n\n  return {\n    getMenuDirection,\n    getTop\n  };\n\n  function getMenuDirection() {\n    return direction;\n  }\n\n  function getTop() {\n    direction = Direction.Up;\n    let emojiOffsetTop = 0;\n\n    if (!VariationPickerRef.current) {\n      return 0;\n    }\n\n    const height = elementHeight(VariationPickerRef.current);\n\n    if (AnchoredEmojiRef.current) {\n      const bodyRef = BodyRef.current;\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const buttonHeight = elementHeight(button);\n\n      emojiOffsetTop = emojiTrueOffsetTop(button);\n\n      const scrollTop = bodyRef?.scrollTop ?? 0;\n\n      if (scrollTop > emojiOffsetTop - height) {\n        direction = Direction.Down;\n        emojiOffsetTop += buttonHeight + height;\n      }\n    }\n\n    return emojiOffsetTop - height;\n  }\n}\n\nconst styles = stylesheet.create({\n  variationPicker: {\n    '.': ClassNames.variationPicker,\n    position: 'absolute',\n    right: '15px',\n    left: '15px',\n    padding: '5px',\n    boxShadow: '0px 2px 5px rgba(0, 0, 0, 0.2)',\n    borderRadius: '3px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    opacity: '0',\n    visibility: 'hidden',\n    pointerEvents: 'none',\n    top: '-100%',\n    border: '1px solid var(--epr-picker-border-color)',\n    height: 'var(--epr-emoji-variation-picker-height)',\n    zIndex: 'var(--epr-skin-variation-picker-z-index)',\n    background: 'var(--epr-emoji-variation-picker-bg-color)',\n    transform: 'scale(0.9)',\n    transition: 'transform 0.1s ease-out, opacity 0.2s ease-out'\n  },\n  pointingUp: {\n    '.': 'pointing-up',\n    transformOrigin: 'center 0%',\n    transform: 'scale(0.9)'\n  },\n  '.pointing-up': {\n    pointer: {\n      top: '0',\n      transform: 'rotate(180deg) translateY(100%) translateX(18px)'\n    }\n  },\n  visible: {\n    opacity: '1',\n    visibility: 'visible',\n    pointerEvents: 'all',\n    transform: 'scale(1)'\n  },\n  pointer: {\n    '.': 'epr-emoji-pointer',\n    content: '',\n    position: 'absolute',\n    width: '25px',\n    height: '15px',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: '0 0',\n    backgroundSize: '50px 15px',\n    top: '100%',\n    transform: 'translateX(-18px)'\n  },\n  '.epr-dark-theme': {\n    pointer: {\n      backgroundPosition: '-25px 0'\n    }\n  },\n  '.epr-auto-theme': {\n    pointer: {\n      // @ts-ignore\n      '@media (prefers-color-scheme: dark)': {\n        backgroundPosition: '-25px 0'\n      }\n    }\n  }\n});\n","import {\n  elementCountInRow,\n  elementIndexInRow,\n  getElementInNextRow,\n  getElementInPrevRow,\n  getElementInRow,\n  hasNextRow,\n  rowNumber\n} from './elementPositionInRow';\nimport { focusElement } from './focusElement';\nimport { scrollEmojiAboveLabel } from './scrollTo';\nimport {\n  allVisibleEmojis,\n  closestCategory,\n  firstVisibleEmoji,\n  lastVisibleEmoji,\n  nextCategory,\n  nextVisibleEmoji,\n  NullableElement,\n  prevCategory,\n  prevVisibleEmoji,\n  closestCategoryContent\n} from './selectors';\n\nexport function focusFirstVisibleEmoji(parent: NullableElement) {\n  const emoji = firstVisibleEmoji(parent);\n  focusElement(emoji);\n  scrollEmojiAboveLabel(emoji);\n}\n\nexport function focusAndClickFirstVisibleEmoji(parent: NullableElement) {\n  const firstEmoji = firstVisibleEmoji(parent);\n\n  focusElement(firstEmoji);\n  firstEmoji?.click();\n}\n\nexport function focusLastVisibleEmoji(parent: NullableElement) {\n  focusElement(lastVisibleEmoji(parent));\n}\n\nexport function focusNextVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = nextVisibleEmoji(element);\n\n  if (!next) {\n    return focusFirstVisibleEmoji(nextCategory(element));\n  }\n\n  focusElement(next);\n  scrollEmojiAboveLabel(next);\n}\n\nexport function focusPrevVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const prev = prevVisibleEmoji(element);\n\n  if (!prev) {\n    return focusLastVisibleEmoji(prevCategory(element));\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowUp(\n  element: NullableElement,\n  exitUp: () => void\n) {\n  if (!element) {\n    return;\n  }\n\n  const prev = visibleEmojiOneRowUp(element);\n\n  if (!prev) {\n    return exitUp();\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowDown(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = visibleEmojiOneRowDown(element);\n\n  return focusElement(next);\n}\n\nfunction visibleEmojiOneRowUp(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n\n  if (row === 0) {\n    const prevVisibleCategory = prevCategory(category);\n\n    if (!prevVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(prevVisibleCategory),\n      -1, // last row\n      countInRow,\n      indexInRow\n    );\n  }\n\n  return getElementInPrevRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n}\n\nfunction visibleEmojiOneRowDown(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n  if (!hasNextRow(categoryContent, element)) {\n    const nextVisibleCategory = nextCategory(category);\n\n    if (!nextVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(nextVisibleCategory),\n      0,\n      countInRow,\n      indexInRow\n    );\n  }\n\n  const itemInNextRow = getElementInNextRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n\n  return itemInNextRow;\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { stylesheet } from '../../Stylesheet/stylesheet';\nimport { useOnMouseMove } from '../../hooks/useDisallowMouseMove';\nimport { useMouseDownHandlers } from '../../hooks/useMouseDownHandlers';\nimport { useOnScroll } from '../../hooks/useOnScroll';\nimport { useBodyRef } from '../context/ElementRefContext';\n\nimport { EmojiList } from './EmojiList';\nimport { EmojiVariationPicker } from './EmojiVariationPicker';\n\nexport function Body() {\n  const BodyRef = useBodyRef();\n  useOnScroll(BodyRef);\n  useMouseDownHandlers(BodyRef);\n  useOnMouseMove();\n\n  return (\n    <div className={cx(styles.body)} ref={BodyRef}>\n      <EmojiVariationPicker />\n      <EmojiList />\n    </div>\n  );\n}\n\nconst styles = stylesheet.create({\n  body: {\n    '.': ClassNames.scrollBody,\n    flex: '1',\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    position: 'relative'\n  }\n});\n","import { useEffect } from 'react';\n\nimport { ElementRef } from '../components/context/ElementRefContext';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\n\nexport function useOnScroll(BodyRef: ElementRef) {\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    if (!bodyRef) {\n      return;\n    }\n\n    bodyRef.addEventListener('scroll', onScroll, {\n      passive: true\n    });\n\n    function onScroll() {\n      closeAllOpenToggles();\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('scroll', onScroll);\n    };\n  }, [BodyRef, closeAllOpenToggles]);\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\nimport { stylesheet } from '../../Stylesheet/stylesheet';\n\nexport enum FlexDirection {\n  ROW = 'FlexRow',\n  COLUMN = 'FlexColumn'\n}\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  direction?: FlexDirection;\n}>;\n\nexport default function Flex({\n  children,\n  className,\n  style = {},\n  direction = FlexDirection.ROW\n}: Props) {\n  return (\n    <div\n      style={{ ...style }}\n      className={cx(styles.flex, className, styles[direction])}\n    >\n      {children}\n    </div>\n  );\n}\n\nconst styles = stylesheet.create({\n  flex: {\n    display: 'flex'\n  },\n  [FlexDirection.ROW]: {\n    flexDirection: 'row'\n  },\n  [FlexDirection.COLUMN]: {\n    flexDirection: 'column'\n  }\n});\n","import { useSkinTonePickerLocationConfig } from '../config/useConfig';\nimport { SkinTonePickerLocation } from '../types/exposedTypes';\n\nexport function useShouldShowSkinTonePicker() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return function shouldShowSkinTonePicker(location: SkinTonePickerLocation) {\n    return skinTonePickerLocationConfig === location;\n  };\n}\n\nexport function useIsSkinToneInSearch() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.SEARCH;\n}\n\nexport function useIsSkinToneInPreview() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.PREVIEW;\n}\n","import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useSkinTonesDisabledConfig } from '../../config/useConfig';\nimport skinToneVariations, {\n  skinTonesNamed\n} from '../../data/skinToneVariations';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useFocusSearchInput } from '../../hooks/useFocus';\nimport { SkinTones } from '../../types/exposedTypes';\nimport Absolute from '../Layout/Absolute';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSkinTonePickerRef } from '../context/ElementRefContext';\nimport {\n  useActiveSkinToneState,\n  useSkinToneFanOpenState\n} from '../context/PickerContext';\n\nimport './SkinTonePicker.css';\nimport { cx } from 'flairup';\n\nconst ITEM_SIZE = 28;\n\ntype Props = {\n  direction?: SkinTonePickerDirection;\n};\n\nexport function SkinTonePickerMenu() {\n  return (\n    <Relative style={{ height: ITEM_SIZE }}>\n      <Absolute style={{ bottom: 0, right: 0 }}>\n        <SkinTonePicker direction={SkinTonePickerDirection.VERTICAL} />\n      </Absolute>\n    </Relative>\n  );\n}\n\nexport function SkinTonePicker({\n  direction = SkinTonePickerDirection.HORIZONTAL\n}: Props) {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const isDisabled = useSkinTonesDisabledConfig();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const [activeSkinTone, setActiveSkinTone] = useActiveSkinToneState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const focusSearchInput = useFocusSearchInput();\n\n  if (isDisabled) {\n    return null;\n  }\n\n  const fullWidth = `${ITEM_SIZE * skinToneVariations.length}px`;\n\n  const expandedSize = isOpen ? fullWidth : ITEM_SIZE + 'px';\n\n  const vertical = direction === SkinTonePickerDirection.VERTICAL;\n\n  return (\n    <Relative\n      className={cx('epr-skin-tones', direction, {\n        [ClassNames.open]: isOpen\n      })}\n      style={\n        vertical\n          ? { flexBasis: expandedSize, height: expandedSize }\n          : { flexBasis: expandedSize }\n      }\n    >\n      <div className=\"epr-skin-tone-select\" ref={SkinTonePickerRef}>\n        {skinToneVariations.map((skinToneVariation, i) => {\n          const active = skinToneVariation === activeSkinTone;\n          return (\n            <Button\n              style={{\n                transform: cx(\n                  vertical\n                    ? `translateY(-${i * (isOpen ? ITEM_SIZE : 0)}px)`\n                    : `translateX(-${i * (isOpen ? ITEM_SIZE : 0)}px)`,\n                  isOpen && active && 'scale(1.3)'\n                )\n              }}\n              onClick={() => {\n                if (isOpen) {\n                  setActiveSkinTone(skinToneVariation);\n                  focusSearchInput();\n                } else {\n                  setIsOpen(true);\n                }\n                closeAllOpenToggles();\n              }}\n              key={skinToneVariation}\n              className={cx(`epr-tone-${skinToneVariation}`, 'epr-tone', {\n                [ClassNames.active]: active\n              })}\n              tabIndex={isOpen ? 0 : -1}\n              aria-pressed={active}\n              aria-label={`Skin tone ${\n                skinTonesNamed[skinToneVariation as SkinTones]\n              }`}\n            ></Button>\n          );\n        })}\n      </div>\n    </Relative>\n  );\n}\n\nexport enum SkinTonePickerDirection {\n  VERTICAL = ClassNames.vertical,\n  HORIZONTAL = ClassNames.horizontal\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\n\ntype Props = Readonly<{\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Space({ className, style = {} }: Props) {\n  return <div style={{ flex: 1, ...style }} className={cx(className)} />;\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Absolute({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'absolute' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Relative({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'relative' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\nimport { useState } from 'react';\n\nimport { stylesheet } from '../../Stylesheet/stylesheet';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  usePreviewConfig\n} from '../../config/useConfig';\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUnified\n} from '../../dataUtils/emojiSelectors';\nimport { useEmojiPreviewEvents } from '../../hooks/useEmojiPreviewEvents';\nimport { useIsSkinToneInPreview } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Space from '../Layout/Space';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ViewOnlyEmoji } from '../emoji/ViewOnlyEmoji';\nimport { SkinTonePickerMenu } from '../header/SkinTonePicker';\n\nexport function Preview() {\n  const previewConfig = usePreviewConfig();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n\n  if (!previewConfig.showPreview) {\n    return null;\n  }\n\n  return (\n    <Flex className={cx(styles.preview)}>\n      <PreviewBody />\n      <Space />\n      {isSkinToneInPreview ? <SkinTonePickerMenu /> : null}\n    </Flex>\n  );\n}\n\nexport function PreviewBody() {\n  const previewConfig = usePreviewConfig();\n  const [previewEmoji, setPreviewEmoji] = useState<PreviewEmoji>(null);\n  const emojiStyle = useEmojiStyleConfig();\n  const [variationPickerEmoji] = useEmojiVariationPickerState();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEmojiPreviewEvents(previewConfig.showPreview, setPreviewEmoji);\n\n  const emoji = emojiByUnified(\n    previewEmoji?.unified ?? previewEmoji?.originalUnified\n  );\n\n  const show = emoji != null && previewEmoji != null;\n\n  return <PreviewContent />;\n\n  function PreviewContent() {\n    const defaultEmoji =\n      variationPickerEmoji ?? emojiByUnified(previewConfig.defaultEmoji);\n    if (!defaultEmoji) {\n      return null;\n    }\n    const defaultText = variationPickerEmoji\n      ? emojiName(variationPickerEmoji)\n      : previewConfig.defaultCaption;\n\n    return (\n      <>\n        <div>\n          {show ? (\n            <ViewOnlyEmoji\n              unified={previewEmoji?.unified as string}\n              emoji={emoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : defaultEmoji ? (\n            <ViewOnlyEmoji\n              unified={emojiUnified(defaultEmoji)}\n              emoji={defaultEmoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : null}\n        </div>\n        {show ? (\n          <div className={cx(styles.label)}>{emojiName(emoji)}</div>\n        ) : (\n          <div className={cx(styles.label)}>{defaultText}</div>\n        )}\n      </>\n    );\n  }\n}\n\nexport type PreviewEmoji = null | {\n  unified: string;\n  originalUnified: string;\n};\n\nconst styles = stylesheet.create({\n  preview: {\n    alignItems: 'center',\n    borderTop: '1px solid var(--epr-preview-border-color)',\n    height: 'var(--epr-preview-height)',\n    padding: '0 var(--epr-horizontal-padding)',\n    position: 'relative',\n    zIndex: 'var(--epr-preview-z-index)'\n  },\n  label: {\n    color: 'var(--epr-preview-text-color)',\n    fontSize: 'var(--epr-preview-text-size)',\n    padding: 'var(--epr-preview-text-padding)',\n    textTransform: 'capitalize'\n  }\n});\n","import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { focusElement } from '../DomUtils/focusElement';\nimport {\n  buttonFromTarget,\n  originalUnifiedFromEmojiElement,\n  unifiedFromEmojiElement\n} from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { PreviewEmoji } from '../components/footer/Preview';\n\nimport {\n  useAllowMouseMove,\n  useIsMouseDisallowed\n} from './useDisallowMouseMove';\n\nexport function useEmojiPreviewEvents(\n  allow: boolean,\n  setPreviewEmoji: React.Dispatch<React.SetStateAction<PreviewEmoji>>\n) {\n  const BodyRef = useBodyRef();\n  const isMouseDisallowed = useIsMouseDisallowed();\n  const allowMouseMove = useAllowMouseMove();\n\n  useEffect(() => {\n    if (!allow) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('keydown', onEscape, {\n      passive: true\n    });\n\n    bodyRef?.addEventListener('mouseover', onMouseOver, true);\n\n    bodyRef?.addEventListener('focus', onEnter, true);\n\n    bodyRef?.addEventListener('mouseout', onLeave, {\n      passive: true\n    });\n    bodyRef?.addEventListener('blur', onLeave, true);\n\n    function onEnter(e: FocusEvent) {\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (!button) {\n        return onLeave();\n      }\n\n      const unified = unifiedFromEmojiElement(button);\n      const originalUnified = originalUnifiedFromEmojiElement(button);\n\n      if (!unified || !originalUnified) {\n        return onLeave();\n      }\n\n      setPreviewEmoji({\n        unified,\n        originalUnified\n      });\n    }\n    function onLeave(e?: FocusEvent | MouseEvent) {\n      if (e) {\n        const relatedTarget = e.relatedTarget as HTMLElement;\n\n        if (!buttonFromTarget(relatedTarget)) {\n          return setPreviewEmoji(null);\n        }\n      }\n\n      setPreviewEmoji(null);\n    }\n    function onEscape(e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        setPreviewEmoji(null);\n      }\n    }\n\n    function onMouseOver(e: MouseEvent) {\n      if (isMouseDisallowed()) {\n        return;\n      }\n\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (button) {\n        focusElement(button);\n      }\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('mouseover', onMouseOver);\n      bodyRef?.removeEventListener('mouseout', onLeave);\n      bodyRef?.removeEventListener('focus', onEnter, true);\n      bodyRef?.removeEventListener('blur', onLeave, true);\n      bodyRef?.removeEventListener('keydown', onEscape);\n    };\n  }, [BodyRef, allow, setPreviewEmoji, isMouseDisallowed, allowMouseMove]);\n}\n","import { useSearchTermState } from '../components/context/PickerContext';\n\nexport default function useIsSearchMode(): boolean {\n  const [searchTerm] = useSearchTermState();\n\n  return !!searchTerm;\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport './CategoryNavigation.css';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { stylesheet } from '../../Stylesheet/stylesheet';\nimport {\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport { useCategoriesConfig } from '../../config/useConfig';\nimport { useActiveCategoryScrollDetection } from '../../hooks/useActiveCategoryScrollDetection';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useScrollCategoryIntoView } from '../../hooks/useScrollCategoryIntoView';\nimport { useShouldHideCustomEmojis } from '../../hooks/useShouldHideCustomEmojis';\nimport { isCustomCategory } from '../../typeRefinements/typeRefinements';\nimport { Button } from '../atoms/Button';\nimport { useCategoryNavigationRef } from '../context/ElementRefContext';\n\nexport function CategoryNavigation() {\n  const [activeCategory, setActiveCategory] = useState<string | null>(null);\n  const scrollCategoryIntoView = useScrollCategoryIntoView();\n  useActiveCategoryScrollDetection(setActiveCategory);\n  const isSearchMode = useIsSearchMode();\n\n  const categoriesConfig = useCategoriesConfig();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const hideCustomCategory = useShouldHideCustomEmojis();\n\n  return (\n    <div\n      className={cx(styles.nav)}\n      role=\"tablist\"\n      aria-label=\"Category navigation\"\n      id=\"epr-category-nav-id\"\n      ref={CategoryNavigationRef}\n    >\n      {categoriesConfig.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n        const isActiveCategory = category === activeCategory;\n\n        if (isCustomCategory(categoryConfig) && hideCustomCategory) {\n          return null;\n        }\n\n        return (\n          <Button\n            tabIndex={isSearchMode || isActiveCategory ? -1 : 0}\n            className={cx(styles.catBtn, `epr-icn-${category}`, {\n              [ClassNames.active]: isActiveCategory\n            })}\n            key={category}\n            onClick={() => {\n              setActiveCategory(category);\n              scrollCategoryIntoView(category);\n            }}\n            aria-label={categoryNameFromCategoryConfig(categoryConfig)}\n            aria-selected={isActiveCategory}\n            role=\"tab\"\n            aria-controls=\"epr-category-nav-id\"\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nconst styles = stylesheet.create({\n  nav: {\n    '.': 'epr-category-nav',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 'var(--epr-header-padding)'\n  },\n  '.epr-search-active': {\n    nav: {\n      opacity: '0.3',\n      cursor: 'default',\n      pointerEvents: 'none'\n    }\n  },\n  '.epr-main:has(input:not(:placeholder-shown))': {\n    nav: {\n      opacity: '0.3',\n      cursor: 'default',\n      pointerEvents: 'none'\n    }\n  },\n  catBtn: {\n    '.': 'epr-cat-btn',\n    display: 'inline-block',\n    transition: 'opacity 0.2s ease-in-out',\n    position: 'relative',\n    height: 'var(--epr-category-navigation-button-size)',\n    width: 'var(--epr-category-navigation-button-size)',\n    backgroundSize: 'calc(var(--epr-category-navigation-button-size) * 10)',\n    outline: 'none',\n    backgroundPosition: '0 0',\n    ':focus:before': {\n      content: '',\n      position: 'absolute',\n      top: '-2px',\n      left: '-2px',\n      right: '-2px',\n      bottom: '-2px',\n      border: '2px solid var(--epr-category-icon-active-color)',\n      borderRadius: '50%'\n    }\n  }\n});\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport { NullableElement } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  usePickerMainRef\n} from '../components/context/ElementRefContext';\n\nexport function useScrollCategoryIntoView() {\n  const BodyRef = useBodyRef();\n  const PickerMainRef = usePickerMainRef();\n\n  return function scrollCategoryIntoView(category: string): void {\n    if (!BodyRef.current) {\n      return;\n    }\n    const $category = BodyRef.current?.querySelector(\n      `[data-name=\"${category}\"]`\n    ) as NullableElement;\n\n    if (!$category) {\n      return;\n    }\n\n    const offsetTop = $category.offsetTop || 0;\n\n    scrollTo(PickerMainRef.current, offsetTop);\n  };\n}\n","import { useEffect } from 'react';\n\nimport { categoryNameFromDom } from '../DomUtils/categoryNameFromDom';\nimport { asSelectors, ClassNames } from '../DomUtils/classNames';\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nexport function useActiveCategoryScrollDetection(\n  setActiveCategory: (category: string) => void\n) {\n  const BodyRef = useBodyRef();\n\n  useEffect(() => {\n    const visibleCategories = new Map();\n    const bodyRef = BodyRef.current;\n    const observer = new IntersectionObserver(\n      entries => {\n        if (!bodyRef) {\n          return;\n        }\n\n        for (const entry of entries) {\n          const id = categoryNameFromDom(entry.target);\n          visibleCategories.set(id, entry.intersectionRatio);\n        }\n\n        const ratios = Array.from(visibleCategories);\n        const lastCategory = ratios[ratios.length - 1];\n\n        if (lastCategory[1] == 1) {\n          return setActiveCategory(lastCategory[0]);\n        }\n\n        for (const [id, ratio] of ratios) {\n          if (ratio) {\n            setActiveCategory(id);\n            break;\n          }\n        }\n      },\n      {\n        threshold: [0, 1]\n      }\n    );\n    bodyRef?.querySelectorAll(asSelectors(ClassNames.category)).forEach(el => {\n      observer.observe(el);\n    });\n  }, [BodyRef, setActiveCategory]);\n}\n","export function categoryNameFromDom($category: Element | null): string | null {\n  return $category?.getAttribute('data-name') ?? null;\n}\n","import { useCustomEmojisConfig } from '../config/useConfig';\n\nexport function useShouldHideCustomEmojis() {\n  const customCategoryConfig = useCustomEmojisConfig();\n\n  if (!customCategoryConfig) {\n    return false;\n  }\n\n  return customCategoryConfig.length === 0;\n}\n","import * as React from 'react';\n\nimport { ClassNames, asSelectors } from '../../DomUtils/classNames';\nimport { getNormalizedSearchTerm } from '../../hooks/useFilter';\n\nconst SCOPE = `${asSelectors(ClassNames.emojiPicker)} ${asSelectors(\n  ClassNames.emojiList\n)}`;\n\nconst EMOJI_BUTTON = ['button', asSelectors(ClassNames.emoji)].join('');\nconst CATEGORY = asSelectors(ClassNames.category);\n\nexport function CssSearch({ value }: { value: undefined | string }) {\n  if (!value) {\n    return null;\n  }\n\n  const q = genQuery(value);\n\n  return (\n    <style>{`\n    ${SCOPE} ${EMOJI_BUTTON} {\n      display: none;\n    }\n\n\n    ${SCOPE} ${q} {\n      display: flex;\n    }\n\n    ${SCOPE} ${CATEGORY}:not(:has(${q})) {\n      display: none;\n    }\n  `}</style>\n  );\n}\n\nfunction genQuery(value: string): string {\n  return [\n    EMOJI_BUTTON,\n    '[data-full-name*=\"',\n    getNormalizedSearchTerm(value),\n    '\"]'\n  ].join('');\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\nimport { useState } from 'react';\n\nimport { stylesheet } from '../../Stylesheet/stylesheet';\nimport {\n  useAutoFocusSearchConfig,\n  useSearchDisabledConfig,\n  useSearchPlaceHolderConfig\n} from '../../config/useConfig';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useClearSearch, useFilter } from '../../hooks/useFilter';\nimport { useIsSkinToneInSearch } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSearchInputRef } from '../context/ElementRefContext';\n\nimport './Search.css';\nimport { CssSearch } from './CssSearch';\nimport { SkinTonePicker } from './SkinTonePicker';\n\nexport function SearchContainer() {\n  const searchDisabled = useSearchDisabledConfig();\n\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  if (searchDisabled) {\n    return null;\n  }\n\n  return (\n    <Flex className={cx(styles.overlay)}>\n      <Search />\n\n      {isSkinToneInSearch ? <SkinTonePicker /> : null}\n    </Flex>\n  );\n}\n\nexport function Search() {\n  const [inc, setInc] = useState(0);\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const SearchInputRef = useSearchInputRef();\n  const clearSearch = useClearSearch();\n  const placeholder = useSearchPlaceHolderConfig();\n  const autoFocus = useAutoFocusSearchConfig();\n  const { statusSearchResults, searchTerm, onChange } = useFilter();\n\n  const input = SearchInputRef?.current;\n  const value = input?.value;\n\n  return (\n    <Relative className={cx(styles.searchContainer)}>\n      <CssSearch value={value} />\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus={autoFocus}\n        aria-label={'Type to search for an emoji'}\n        onFocus={closeAllOpenToggles}\n        className={cx(styles.search)}\n        type=\"text\"\n        aria-controls=\"epr-search-id\"\n        placeholder={placeholder}\n        onChange={event => {\n          setInc(inc + 1);\n          setTimeout(() => {\n            onChange(event?.target?.value ?? value);\n          });\n        }}\n        ref={SearchInputRef}\n      />\n      {searchTerm ? (\n        <div\n          role=\"status\"\n          className={cx('epr-status-search-results', styles.visuallyHidden)}\n          aria-live=\"polite\"\n          id=\"epr-search-id\"\n          aria-atomic=\"true\"\n        >\n          {statusSearchResults}\n        </div>\n      ) : null}\n      <div className={cx(styles.icnSearch)} />\n      <Button\n        className={cx(styles.btnClearSearch, 'epr-visible-on-search-only')}\n        onClick={clearSearch}\n        aria-label=\"Clear\"\n        title=\"Clear\"\n      >\n        <div className={cx(styles.icnClearnSearch)} />\n      </Button>\n    </Relative>\n  );\n}\n\nconst styles = stylesheet.create({\n  overlay: {\n    padding: 'var(--epr-header-padding)',\n    zIndex: 'var(--epr-header-overlay-z-index)'\n  },\n  searchContainer: {\n    '.': 'epr-search-container',\n    flex: '1',\n    display: 'block',\n    minWidth: '0'\n  },\n  visuallyHidden: {\n    clip: 'rect(0 0 0 0)',\n    clipPath: 'inset(50%)',\n    height: '1px',\n    overflow: 'hidden',\n    position: 'absolute',\n    whiteSpace: 'nowrap',\n    width: '1px'\n  },\n  search: {\n    outline: 'none',\n    transition: 'all 0.2s ease-in-out',\n    color: 'var(--epr-search-input-text-color)',\n    borderRadius: 'var(--epr-search-input-border-radius)',\n    padding: 'var(--epr-search-input-padding)',\n    height: 'var(--epr-search-input-height)',\n    backgroundColor: 'var(--epr-search-input-bg-color)',\n    border: '1px solid var(--epr-search-input-bg-color)',\n    width: '100%',\n    ':focus': {\n      backgroundColor: 'var(--epr-search-input-bg-color-active)',\n      border: '1px solid var(--epr-search-border-color)'\n    },\n    '::placeholder': {\n      color: 'var(--epr-search-input-placeholder-color)'\n    }\n  },\n  icnSearch: {\n    '.': 'epr-icn-search',\n    content: '',\n    position: 'absolute',\n    top: '50%',\n    left: 'var(--epr-search-bar-inner-padding)',\n    transform: 'translateY(-50%)',\n    width: '20px',\n    height: '20px',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: '0 0',\n    backgroundSize: '20px'\n  },\n  btnClearSearch: {\n    '.': 'epr-btn-clear-search',\n    position: 'absolute',\n    right: 'var(--epr-search-bar-inner-padding)',\n    height: '30px',\n    width: '30px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    padding: '0',\n    borderRadius: '50%',\n    ':hover': {\n      background: 'var(--epr-hover-bg-color)'\n    },\n    ':focus': {\n      background: 'var(--epr-hover-bg-color)'\n    }\n  },\n  icnClearnSearch: {\n    '.': 'epr-icn-clear-search',\n    backgroundColor: 'transparent',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: '20px',\n    height: '20px',\n    width: '20px',\n    ':hover': {\n      backgroundPositionY: '-20px'\n    },\n    ':focus': {\n      backgroundPositionY: '-20px'\n    }\n  },\n  '.epr-dark-theme': {\n    icnSearch: {\n      backgroundPositionY: '-20px'\n    },\n    icnClearnSearch: {\n      backgroundPositionY: '-40px'\n    },\n    btnClearSearch: {\n      ':hover > .epr-icn-clear-search': {\n        backgroundPositionY: '-60px'\n      }\n    }\n  },\n  '.epr-auto-theme': {\n    icnSearch: {\n      // @ts-ignore\n      '@media (prefers-color-scheme: dark)': {\n        backgroundPositionY: '-20px'\n      }\n    },\n    icnClearnSearch: {\n      // @ts-ignore\n      '@media (prefers-color-scheme: dark)': {\n        backgroundPositionY: '-40px'\n      }\n    },\n    btnClearSearch: {\n      // @ts-ignore\n      '@media (prefers-color-scheme: dark)': {\n        // @ts-ignore\n        ':hover > .epr-icn-clear-search': {\n          backgroundPositionY: '-60px'\n        }\n      }\n    }\n  }\n});\n","import { useCallback, useEffect, useMemo } from 'react';\n\nimport { hasNextElementSibling } from '../DomUtils/elementPositionInRow';\nimport {\n  focusNextElementSibling,\n  focusPrevElementSibling\n} from '../DomUtils/focusElement';\nimport { getActiveElement } from '../DomUtils/getActiveElement';\nimport {\n  focusAndClickFirstVisibleEmoji,\n  focusFirstVisibleEmoji,\n  focusNextVisibleEmoji,\n  focusPrevVisibleEmoji,\n  focusVisibleEmojiOneRowDown,\n  focusVisibleEmojiOneRowUp\n} from '../DomUtils/keyboardNavigation';\nimport { useScrollTo } from '../DomUtils/scrollTo';\nimport { buttonFromTarget } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  useCategoryNavigationRef,\n  usePickerMainRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\nimport { useSkinToneFanOpenState } from '../components/context/PickerContext';\nimport { useSearchDisabledConfig } from '../config/useConfig';\n\nimport {\n  useCloseAllOpenToggles,\n  useHasOpenToggles\n} from './useCloseAllOpenToggles';\nimport { useDisallowMouseMove } from './useDisallowMouseMove';\nimport { useAppendSearch, useClearSearch } from './useFilter';\nimport {\n  useFocusCategoryNavigation,\n  useFocusSearchInput,\n  useFocusSkinTonePicker\n} from './useFocus';\nimport useIsSearchMode from './useIsSearchMode';\nimport useSetVariationPicker from './useSetVariationPicker';\nimport {\n  useIsSkinToneInPreview,\n  useIsSkinToneInSearch\n} from './useShouldShowSkinTonePicker';\n\nenum KeyboardEvents {\n  ArrowDown = 'ArrowDown',\n  ArrowUp = 'ArrowUp',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  Escape = 'Escape',\n  Enter = 'Enter',\n  Space = ' '\n}\n\nexport function useKeyboardNavigation() {\n  usePickerMainKeyboardEvents();\n  useSearchInputKeyboardEvents();\n  useSkinTonePickerKeyboardEvents();\n  useCategoryNavigationKeyboardEvents();\n  useBodyKeyboardEvents();\n}\n\nfunction usePickerMainKeyboardEvents() {\n  const PickerMainRef = usePickerMainRef();\n  const clearSearch = useClearSearch();\n  const scrollTo = useScrollTo();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n  const hasOpenToggles = useHasOpenToggles();\n  const disallowMouseMove = useDisallowMouseMove();\n\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        disallowMouseMove();\n        switch (key) {\n          // eslint-disable-next-line no-fallthrough\n          case KeyboardEvents.Escape:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              return;\n            }\n            clearSearch();\n            scrollTo(0);\n            focusSearchInput();\n            break;\n        }\n      },\n    [\n      scrollTo,\n      clearSearch,\n      closeAllOpenToggles,\n      focusSearchInput,\n      hasOpenToggles,\n      disallowMouseMove\n    ]\n  );\n\n  useEffect(() => {\n    const current = PickerMainRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, scrollTo, onKeyDown]);\n}\n\nfunction useSearchInputKeyboardEvents() {\n  const focusSkinTonePicker = useFocusSkinTonePicker();\n  const PickerMainRef = usePickerMainRef();\n  const BodyRef = useBodyRef();\n  const SearchInputRef = useSearchInputRef();\n  const [, setSkinToneFanOpenState] = useSkinToneFanOpenState();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            if (!isSkinToneInSearch) {\n              return;\n            }\n            event.preventDefault();\n            setSkinToneFanOpenState(true);\n            focusSkinTonePicker();\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            goDownFromSearchInput();\n            break;\n          case KeyboardEvents.Enter:\n            event.preventDefault();\n            focusAndClickFirstVisibleEmoji(BodyRef.current);\n            break;\n        }\n      },\n    [\n      focusSkinTonePicker,\n      goDownFromSearchInput,\n      setSkinToneFanOpenState,\n      BodyRef,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SearchInputRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, onKeyDown]);\n}\n\nfunction useSkinTonePickerKeyboardEvents() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const focusSearchInput = useFocusSearchInput();\n  const SearchInputRef = useSearchInputRef();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        if (isSkinToneInSearch) {\n          switch (key) {\n            case KeyboardEvents.ArrowLeft:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowRight:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (isOpen) {\n                setIsOpen(false);\n              }\n              goDownFromSearchInput();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n\n        if (isSkinToneInPreview) {\n          switch (key) {\n            case KeyboardEvents.ArrowUp:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n      },\n    [\n      isOpen,\n      focusSearchInput,\n      setIsOpen,\n      goDownFromSearchInput,\n      onType,\n      isSkinToneInPreview,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SkinTonePickerRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [SkinTonePickerRef, SearchInputRef, isOpen, onKeyDown]);\n}\n\nfunction useCategoryNavigationKeyboardEvents() {\n  const focusSearchInput = useFocusSearchInput();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const BodyRef = useBodyRef();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            focusSearchInput();\n            break;\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            focusFirstVisibleEmoji(BodyRef.current);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [BodyRef, focusSearchInput, onType]\n  );\n\n  useEffect(() => {\n    const current = CategoryNavigationRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [CategoryNavigationRef, BodyRef, onKeyDown]);\n}\n\nfunction useBodyKeyboardEvents() {\n  const BodyRef = useBodyRef();\n  const goUpFromBody = useGoUpFromBody();\n  const setVariationPicker = useSetVariationPicker();\n  const hasOpenToggles = useHasOpenToggles();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        const activeElement = buttonFromTarget(getActiveElement());\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowDown(activeElement);\n            break;\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowUp(activeElement, goUpFromBody);\n            break;\n          case KeyboardEvents.Space:\n            event.preventDefault();\n            setVariationPicker(event.target as HTMLElement);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [\n      goUpFromBody,\n      onType,\n      setVariationPicker,\n      hasOpenToggles,\n      closeAllOpenToggles\n    ]\n  );\n\n  useEffect(() => {\n    const current = BodyRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [BodyRef, onKeyDown]);\n}\n\nfunction useGoDownFromSearchInput() {\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    function goDownFromSearchInput() {\n      if (isSearchMode) {\n        return focusFirstVisibleEmoji(BodyRef.current);\n      }\n      return focusCategoryNavigation();\n    },\n    [BodyRef, focusCategoryNavigation, isSearchMode]\n  );\n}\n\nfunction useGoUpFromBody() {\n  const focusSearchInput = useFocusSearchInput();\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n\n  return useCallback(\n    function goUpFromEmoji() {\n      if (isSearchMode) {\n        return focusSearchInput();\n      }\n      return focusCategoryNavigation();\n    },\n    [focusSearchInput, isSearchMode, focusCategoryNavigation]\n  );\n}\n\nfunction focusNextSkinTone(exitLeft: () => void) {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  if (!hasNextElementSibling(currentSkinTone)) {\n    exitLeft();\n  }\n\n  focusNextElementSibling(currentSkinTone);\n}\n\nfunction focusPrevSkinTone() {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  focusPrevElementSibling(currentSkinTone);\n}\n\nfunction useOnType() {\n  const appendSearch = useAppendSearch();\n  const focusSearchInput = useFocusSearchInput();\n  const searchDisabled = useSearchDisabledConfig();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  return function onType(event: KeyboardEvent) {\n    const { key } = event;\n\n    if (hasModifier(event) || searchDisabled) {\n      return;\n    }\n\n    if (key.match(/(^[a-zA-Z0-9]$){1}/)) {\n      event.preventDefault();\n      closeAllOpenToggles();\n      focusSearchInput();\n      appendSearch(key);\n    }\n  };\n}\n\nfunction hasModifier(event: KeyboardEvent): boolean {\n  const { metaKey, ctrlKey, altKey } = event;\n\n  return metaKey || ctrlKey || altKey;\n}\n","import * as React from 'react';\n\nimport Relative from '../Layout/Relative';\nimport { CategoryNavigation } from '../navigation/CategoryNavigation';\n\nimport { SearchContainer } from './Search';\n\nexport function Header() {\n  return (\n    <Relative className=\"epr-header\">\n      <SearchContainer />\n      <CategoryNavigation />\n    </Relative>\n  );\n}\n","import { NullableElement } from './selectors';\n\nexport function getActiveElement() {\n  return document.activeElement as NullableElement;\n}\n","import { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified, emojiVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nexport function preloadEmoji(\n  getEmojiUrl: GetEmojiUrl,\n  emoji: undefined | DataEmoji,\n  emojiStyle: EmojiStyle\n): void {\n  if (!emoji) {\n    return;\n  }\n\n  if (emojiStyle === EmojiStyle.NATIVE) {\n    return;\n  }\n\n  const unified = emojiUnified(emoji);\n\n  if (preloadedEmojs.has(unified)) {\n    return;\n  }\n\n  emojiVariations(emoji).forEach((variation) => {\n    const emojiUrl = getEmojiUrl(variation, emojiStyle);\n    preloadImage(emojiUrl);\n  });\n\n  preloadedEmojs.add(unified);\n}\n\nexport const preloadedEmojs: Set<string> = new Set();\n\nfunction preloadImage(url: string): void {\n  const image = new Image();\n  image.src = url;\n}\n","import { cx } from 'flairup';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { stylesheet } from '../../Stylesheet/stylesheet';\nimport {\n  useClassNameConfig,\n  useStyleConfig,\n  useThemeConfig\n} from '../../config/useConfig';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useKeyboardNavigation } from '../../hooks/useKeyboardNavigation';\nimport { useOnFocus } from '../../hooks/useOnFocus';\nimport { Theme } from '../../types/exposedTypes';\nimport { usePickerMainRef } from '../context/ElementRefContext';\nimport { PickerContextProvider } from '../context/PickerContext';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport default function PickerMain({ children }: Props) {\n  return (\n    <PickerContextProvider>\n      <PickerRootElement>{children}</PickerRootElement>\n    </PickerContextProvider>\n  );\n}\n\ntype RootProps = Readonly<{\n  className?: string;\n  style?: React.CSSProperties;\n  children: React.ReactNode;\n}>;\n\nfunction PickerRootElement({ children }: RootProps) {\n  const theme = useThemeConfig();\n  const searchModeActive = useIsSearchMode();\n  const PickerMainRef = usePickerMainRef();\n  const className = useClassNameConfig();\n  const style = useStyleConfig();\n\n  useKeyboardNavigation();\n  useOnFocus();\n\n  return (\n    <aside\n      className={cx(\n        styles.main,\n        styles.baseVariables,\n        theme === Theme.DARK && styles.darkTheme,\n        theme === Theme.AUTO && styles.autoThemeDark,\n        {\n          [ClassNames.searchActive]: searchModeActive\n        },\n        className\n      )}\n      ref={PickerMainRef}\n      style={style}\n    >\n      {children}\n    </aside>\n  );\n}\n\nconst DarkTheme = {\n  '--epr-emoji-variation-picker-bg-color':\n    'var(--epr-dark-emoji-variation-picker-bg-color)',\n  '--epr-highlight-color': 'var(--epr-dark-highlight-color)',\n  '--epr-text-color': 'var(--epr-dark-text-color)',\n  '--epr-hover-bg-color': 'var(--epr-dark-hover-bg-color)',\n  '--epr-focus-bg-color': 'var(--epr-dark-focus-bg-color)',\n  '--epr-search-input-bg-color': 'var(--epr-dark-search-input-bg-color)',\n  '--epr-category-label-bg-color': 'var(--epr-dark-category-label-bg-color)',\n  '--epr-picker-border-color': 'var(--epr-dark-picker-border-color)',\n  '--epr-bg-color': 'var(--epr-dark-bg-color)',\n  '--epr-search-input-bg-color-active':\n    'var(--epr-dark-search-input-bg-color-active)',\n  '--epr-emoji-variation-indicator-color':\n    'var(--epr-dark-emoji-variation-indicator-color)',\n  '--epr-category-icon-active-color':\n    'var(--epr-dark-category-icon-active-color)',\n  '--epr-skin-tone-picker-menu-color':\n    'var(--epr-dark-skin-tone-picker-menu-color)'\n};\n\nconst styles = stylesheet.create({\n  main: {\n    '.': ['epr-main', ClassNames.emojiPicker],\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderRadius: 'var(--epr-picker-border-radius)',\n    borderColor: 'var(--epr-picker-border-color)',\n    backgroundColor: 'var(--epr-bg-color)',\n    overflow: 'hidden'\n  },\n  baseVariables: {\n    '--': {\n      '--epr-highlight-color': '#007aeb',\n      '--epr-hover-bg-color': '#f1f8ff',\n      '--epr-focus-bg-color': '#e0f0ff',\n      '--epr-text-color': '#858585',\n      '--epr-search-input-bg-color': '#f6f6f6',\n      '--epr-picker-border-color': '#e7e7e7',\n      '--epr-bg-color': '#fff',\n      '--epr-category-icon-active-color': '#6aa8de',\n      '--epr-skin-tone-picker-menu-color': '#ffffff95',\n\n      '--epr-horizontal-padding': '10px',\n\n      '--epr-picker-border-radius': '8px',\n\n      /* Header */\n      '--epr-search-border-color': 'var(--epr-highlight-color)',\n      '--epr-header-padding': '15px var(--epr-horizontal-padding)',\n\n      /* Skin Tone Picker */\n      '--epr-active-skin-tone-indicator-border-color':\n        'var(--epr-highlight-color)',\n      '--epr-active-skin-hover-color': 'var(--epr-hover-bg-color)',\n\n      /* Search */\n      '--epr-search-input-bg-color-active': 'var(--epr-search-input-bg-color)',\n      '--epr-search-input-padding': '0 30px',\n      '--epr-search-input-border-radius': '8px',\n      '--epr-search-input-height': '40px',\n      '--epr-search-input-text-color': 'var(--epr-text-color)',\n      '--epr-search-input-placeholder-color': 'var(--epr-text-color)',\n      '--epr-search-bar-inner-padding': 'var(--epr-horizontal-padding)',\n\n      /*  Category Navigation */\n      '--epr-category-navigation-button-size': '30px',\n\n      /* Variation Picker */\n      '--epr-emoji-variation-picker-height': '45px',\n      '--epr-emoji-variation-picker-bg-color': 'var(--epr-bg-color)',\n\n      /*  Preview */\n      '--epr-preview-height': '70px',\n      '--epr-preview-text-size': '14px',\n      '--epr-preview-text-padding': '0 var(--epr-horizontal-padding)',\n      '--epr-preview-border-color': 'var(--epr-picker-border-color)',\n      '--epr-preview-text-color': 'var(--epr-text-color)',\n\n      /* Category */\n      '--epr-category-padding': '0 var(--epr-horizontal-padding)',\n\n      /*  Category Label */\n      '--epr-category-label-bg-color': '#ffffffe6',\n      '--epr-category-label-text-color': 'var(--epr-text-color)',\n      '--epr-category-label-padding': '0 var(--epr-horizontal-padding)',\n      '--epr-category-label-height': '40px',\n\n      /*  Emoji */\n      '--epr-emoji-size': '30px',\n      '--epr-emoji-padding': '5px',\n      '--epr-emoji-fullsize':\n        'calc(var(--epr-emoji-size) + var(--epr-emoji-padding) * 2)',\n      '--epr-emoji-hover-color': 'var(--epr-hover-bg-color)',\n      '--epr-emoji-variation-indicator-color': 'var(--epr-picker-border-color)',\n      '--epr-emoji-variation-indicator-color-hover': 'var(--epr-text-color)',\n\n      /* Z-Index */\n      '--epr-header-overlay-z-index': '3',\n      '--epr-emoji-variations-indictator-z-index': '1',\n      '--epr-category-label-z-index': '2',\n      '--epr-skin-variation-picker-z-index': '5',\n      '--epr-preview-z-index': '6',\n\n      /* Dark Theme Variables */\n      '--epr-dark': '#000',\n      '--epr-dark-emoji-variation-picker-bg-color': 'var(--epr-dark)',\n      '--epr-dark-highlight-color': '#c0c0c0',\n      '--epr-dark-text-color': 'var(--epr-highlight-color)',\n      '--epr-dark-hover-bg-color': '#363636f6',\n      '--epr-dark-focus-bg-color': '#474747',\n      '--epr-dark-search-input-bg-color': '#333333',\n      '--epr-dark-category-label-bg-color': '#222222e6',\n      '--epr-dark-picker-border-color': '#151617',\n      '--epr-dark-bg-color': '#222222',\n      '--epr-dark-search-input-bg-color-active': 'var(--epr-dark)',\n      '--epr-dark-emoji-variation-indicator-color': '#444',\n      '--epr-dark-category-icon-active-color': '#3271b7',\n      '--epr-dark-skin-tone-picker-menu-color': '#22222295'\n    }\n  },\n  autoThemeDark: {\n    '.': ClassNames.autoTheme,\n    '@media (prefers-color-scheme: dark)': {\n      '--': DarkTheme\n    }\n  },\n  darkTheme: {\n    '.': ClassNames.darkTheme,\n    '--': DarkTheme\n  }\n});\n","import { useEffect } from 'react';\n\nimport { buttonFromTarget, emojiFromElement } from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useEmojiStyleConfig, useGetEmojiUrlConfig } from '../config/useConfig';\nimport { emojiHasVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nimport { preloadEmoji } from './preloadEmoji';\n\nexport function useOnFocus() {\n  const BodyRef = useBodyRef();\n  const emojiStyle = useEmojiStyleConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEffect(() => {\n    if (emojiStyle === EmojiStyle.NATIVE) {\n      return;\n    }\n\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('focusin', onFocus);\n\n    return () => {\n      bodyRef?.removeEventListener('focusin', onFocus);\n    };\n\n    function onFocus(event: FocusEvent) {\n      const button = buttonFromTarget(event.target as HTMLElement);\n\n      if (!button) {\n        return;\n      }\n\n      const [emoji] = emojiFromElement(button);\n\n      if (!emoji) {\n        return;\n      }\n\n      if (emojiHasVariations(emoji)) {\n        preloadEmoji(getEmojiUrl, emoji, emojiStyle);\n      }\n    }\n  }, [BodyRef, emojiStyle, getEmojiUrl]);\n}\n","import * as React from 'react';\n\nimport { Body } from './components/body/Body';\nimport { ElementRefContextProvider } from './components/context/ElementRefContext';\nimport { PickerConfigProvider } from './components/context/PickerConfigContext';\nimport { Preview } from './components/footer/Preview';\nimport { Header } from './components/header/Header';\nimport PickerMain from './components/main/PickerMain';\n\nimport './EmojiPickerReact.css';\nimport { PickerProps } from './index';\n\nfunction EmojiPicker(props: PickerProps) {\n  return (\n    <ElementRefContextProvider>\n      <PickerConfigProvider {...props}>\n        <PickerMain>\n          <Header />\n          <Body />\n          <Preview />\n        </PickerMain>\n      </PickerConfigProvider>\n    </ElementRefContextProvider>\n  );\n}\n\n// eslint-disable-next-line complexity\nexport default React.memo(EmojiPicker, (prev, next) => {\n  const prevCustomEmojis = prev.customEmojis ?? [];\n  const nextCustomEmojis = next.customEmojis ?? [];\n  return (\n    prev.emojiVersion === next.emojiVersion &&\n    prev.searchPlaceHolder === next.searchPlaceHolder &&\n    prev.searchPlaceholder === next.searchPlaceholder &&\n    prev.defaultSkinTone === next.defaultSkinTone &&\n    prev.skinTonesDisabled === next.skinTonesDisabled &&\n    prev.autoFocusSearch === next.autoFocusSearch &&\n    prev.emojiStyle === next.emojiStyle &&\n    prev.theme === next.theme &&\n    prev.suggestedEmojisMode === next.suggestedEmojisMode &&\n    prev.lazyLoadEmojis === next.lazyLoadEmojis &&\n    prev.className === next.className &&\n    prev.height === next.height &&\n    prev.width === next.width &&\n    prev.style === next.style &&\n    prev.searchDisabled === next.searchDisabled &&\n    prev.skinTonePickerLocation === next.skinTonePickerLocation &&\n    prevCustomEmojis.length === nextCustomEmojis.length\n  );\n});\n","import * as React from 'react';\n\nexport default class ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    // eslint-disable-next-line no-console\n    console.error('Emoji Picker React failed to render:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n","import * as React from 'react';\n\nimport { EmojiStyle } from '../../types/exposedTypes';\n\nimport { GetEmojiUrl } from './BaseEmojiProps';\nimport { ViewOnlyEmoji } from './ViewOnlyEmoji';\n\nexport function ExportedEmoji({\n  unified,\n  size = 32,\n  emojiStyle = EmojiStyle.APPLE,\n  lazyLoad = false,\n  getEmojiUrl,\n  emojiUrl\n}: {\n  unified: string;\n  emojiStyle?: EmojiStyle;\n  size?: number;\n  lazyLoad?: boolean;\n  getEmojiUrl?: GetEmojiUrl;\n  emojiUrl?: string;\n}) {\n  if (!unified && !emojiUrl && !getEmojiUrl) {\n    return null;\n  }\n\n  return (\n    <ViewOnlyEmoji\n      unified={unified}\n      size={size}\n      emojiStyle={emojiStyle}\n      lazyLoad={lazyLoad}\n      getEmojiUrl={emojiUrl ? () => emojiUrl : getEmojiUrl}\n    />\n  );\n}\n","import * as React from 'react';\n\nimport EmojiPickerReact from './EmojiPickerReact';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { PickerConfig } from './config/config';\nimport {\n  MutableConfigContext,\n  useDefineMutableConfig\n} from './config/mutableConfig';\n\nexport { ExportedEmoji as Emoji } from './components/emoji/ExportedEmoji';\n\nexport {\n  EmojiStyle,\n  SkinTones,\n  Theme,\n  Categories,\n  EmojiClickData,\n  SuggestionMode,\n  SkinTonePickerLocation\n} from './types/exposedTypes';\n\nexport interface PickerProps extends PickerConfig {}\n\nexport default function EmojiPicker(props: PickerProps) {\n  const MutableConfigRef = useDefineMutableConfig({\n    onEmojiClick: props.onEmojiClick\n  });\n\n  return (\n    <ErrorBoundary>\n      <MutableConfigContext.Provider value={MutableConfigRef}>\n        <EmojiPickerReact {...props} />\n      </MutableConfigContext.Provider>\n    </ErrorBoundary>\n  );\n}\n"],"names":["ClassNames","asSelectors","classNames","Array","_len","_key","arguments","map","c","join","stylesheet","createSheet","commonStyles","create","hidden",".","display","opacity","pointerEvents","visibility","hiddenOnSearch","focusElement","element","requestAnimationFrame","focus","focusPrevElementSibling","previousElementSibling","focusNextElementSibling","nextElementSibling","focusFirstElementChild","firstElementChild","ElementRefContextProvider","_ref","children","PickerMainRef","React","AnchoredEmojiRef","BodyRef","SearchInputRef","SkinTonePickerRef","CategoryNavigationRef","VariationPickerRef","ElementRefContext","Provider","value","SuggestionMode","EmojiStyle","Theme","SkinTones","Categories","SkinTonePickerLocation","useElementRef","usePickerMainRef","useAnchoredEmojiRef","useSetAnchoredEmojiRef","target","current","useBodyRef","useSearchInputRef","useSkinTonePickerRef","useCategoryNavigationRef","categoriesOrdered","SUGGESTED","CUSTOM","SMILEYS_PEOPLE","ANIMALS_NATURE","FOOD_DRINK","TRAVEL_PLACES","ACTIVITIES","OBJECTS","SYMBOLS","FLAGS","SuggestedRecent","name","category","configByCategory","_configByCategory","baseCategoriesConfig","modifiers","_extends","categoryFromCategoryConfig","categoryNameFromCategoryConfig","getBaseConfigByCategory","modifier","Object","assign","EmojiProperties","skinToneVariations","NEUTRAL","LIGHT","MEDIUM_LIGHT","MEDIUM","MEDIUM_DARK","DARK","skinTonesNamed","entries","reduce","acc","skinTonesMapped","mapped","skinTone","_Object$assign","alphaNumericEmojiIndex","indexEmoji","emoji","emojiNames","flat","toLowerCase","replace","split","forEach","char","_alphaNumericEmojiInd","emojiUnified","_emoji$EmojiPropertie","emojiName","unifiedWithoutSkinTone","unified","splat","_splat$splice","splice","emojiHasVariations","_emojiVariationUnifie","emojiVariations","find","variation","includes","emojiVariationUnified","emojisByCategory","_emojis$category","emojis","emojiUrlByUnified","emojiStyle","TWITTER","GOOGLE","FACEBOOK","APPLE","cdnUrl","_emoji$EmojiPropertie2","variations","length","emojiByUnified","allEmojisByUnified","withoutSkinTone","setTimeout","allEmojis","searchIndex","values","Emoji","KNOWN_FAILING_EMOJIS","mergeConfig","userConfig","customEmojis","base","basePickerConfig","previewConfig","_userConfig$previewCo","config","categories","userCategoriesConfig","extra","suggestionMode","RECENT","_userCategoriesConfig","mergeCategoriesConfig","suggestedEmojisMode","_config$customEmojis","emojiData","names","id","added_in","imgUrl","customToRegularEmoji","push","skinTonePickerLocation","searchDisabled","PREVIEW","autoFocusSearch","className","defaultSkinTone","emojiVersion","getEmojiUrl","height","lazyLoadEmojis","basePreviewConfig","searchPlaceHolder","searchPlaceholder","SEARCH","skinTonesDisabled","style","FREQUENT","theme","unicodeToHide","Set","width","defaultEmoji","defaultCaption","showPreview","ConfigContext","PickerConfigProvider","mergedConfig","_React$useState","setMergedConfig","_mergedConfig$customE","_config$customEmojis2","useSetConfig","_objectWithoutPropertiesLoose","_excluded","usePickerConfig","MutableConfigContext","createContext","emptyFunc","useSkinTonesDisabledConfig","useEmojiStyleConfig","useCategoriesConfig","usePreviewConfig","useSearchDisabledConfig","useSkinTonePickerLocationConfig","useGetEmojiUrlConfig","getDimension","dimensionConfig","useDebouncedState","initialValue","delay","_useState","useState","state","setState","timer","useRef","Promise","resolve","clearTimeout","_window","window","useDisallowedEmojis","DisallowedEmojisRef","emojiVersionConfig","useMemo","parseFloat","Number","isNaN","disallowedEmojis","supportedLevel","addedIn","addedInNewerVersion","PickerContextProvider","dispatch","filterRef","disallowClickRef","disallowMouseRef","disallowedEmojisRef","suggestedUpdateState","Date","now","searchTerm","skinToneFanOpenState","activeSkinTone","activeCategoryState","emojisThatFailedToLoadState","emojiVariationPickerState","isPastInitialLoad","useEffect","PickerContext","useFilterRef","useDisallowMouseRef","useSearchTermState","useActiveSkinToneState","useEmojisThatFailedToLoadState","useEmojiVariationPickerState","useSkinToneFanOpenState","useUpdateSuggested","setsuggestedUpdate","useAllowMouseMove","DisallowMouseRef","useIsMouseDisallowed","elementCountInRow","parent","parentWidth","getBoundingClientRect","elementWidth","Math","floor","elementIndexInRow","elementLeft","left","parentLeft","rowNumber","elementHeight","elementTop","top","parentTop","round","getRowElements","elements","row","elementsInRow","lastRow","slice","getElementInRow","indexInRow","rowElements","EmojiButtonSelector","VisibleEmojiSelector","visible","buttonFromTarget","emojiElement","_emojiElement$closest","closest","emojiFromElement","originalUnified","originalUnifiedFromEmojiElement","unifiedFromEmojiElement","_element$clientHeight","clientHeight","emojiTrueOffsetTop","button","closestCategory","labelHeight","categoryLabelHeight","elementOffsetTop","categoryWithoutLabel","querySelector","categoryContent","_category$clientHeigh","_categoryWithoutLabel","queryScrollBody","root","matches","scrollBody","emojiDistanceFromScrollTop","_closestScrollBody$sc","_closestScrollBody","closestScrollBody","scrollTop","_element$closest","_element$offsetTop","offsetTop","elementOffsetLeft","_element$offsetLeft","offsetLeft","_elementDataSetKey","_elementDataSet$key","_element$dataset","dataset","elementDataSet","isVisibleEmoji","classList","contains","isHidden","allVisibleEmojis","from","querySelectorAll","lastVisibleEmoji","last","prevVisibleEmoji","prev","prevCategory","firstVisibleEmoji","parentBottom","bottom","elementBottom","firstVisibleElementInContainer","nextCategory","next","closestCategoryContent","parseNativeEmoji","hex","String","fromCodePoint","parseInt","getSuggested","mode","_window$localStorage$","_window2","localStorage","recent","JSON","parse","getItem","sort","a","b","count","_unused","isCustomEmoji","undefined","useCloseAllOpenToggles","_useEmojiVariationPic","variationPicker","setVariationPicker","_useSkinToneFanOpenSt","skinToneFanOpen","setSkinToneFanOpen","useCallback","useHasOpenToggles","useSetVariationPicker","setAnchoredEmojiRef","setEmojiVariationPicker","emojiFromEvent","event","Boolean","_element$parentElemen","parentElement","scrollTo","$eprBody","scrollEmojiAboveLabel","isEmojiBehindLabel","by","scrollBy","useFocusSearchInput","useFocusCategoryNavigation","useClearSearch","applySearch","useApplySearch","focusSearchInput","setSearchTerm","then","hasMatch","keyword","some","getNormalizedSearchTerm","str","trim","Button","props","type","cx","styles","cursor","border","background","outline","ClickableEmojiButton","_ref$showVariations","showVariations","hasVariations","_cx","position","boxSizing","alignItems","justifyContent","maxWidth","maxHeight","borderRadius","overflow","transition",":hover","backgroundColor",":focus",":after","content","right","borderLeft","borderRight","transform","borderBottom","zIndex",":hover:after","emojiStyles","external","fontSize","common","alignSelf","justifySelf","EmojiImg","_ref$lazyLoad","lazyLoad","onError","src","alt","emojiImag","loading","minWidth","minHeight","padding","NativeEmoji","nativeEmoji","fontFamily","lineHeight","textAlign","letterSpacing","ViewOnlyEmoji","size","_ref$getEmojiUrl","setEmojisThatFailedToLoad","emojiToRender","NATIVE","add","ClickableEmoji","EmojiCategory","categoryConfig","categoryName","label",":not(:has(.epr-visible))","gridGap","gridTemplateColumns","margin","backdropFilter","color","fontWeight","textTransform","Suggested","suggestedUpdated","suggestedEmojisModeConfig","suggested","_getSuggested","suggestedItem","original","key","EmojiList","renderdCategoriesCountRef","emojiList","RenderCategory","isUnicodeHidden","filter","emojisThatFailedToLoad","isEmojiFiltered","isEmojiHidden","_filter$searchTerm","isEmojiFilteredBySearchTerm","failedToLoad","has","filteredOut","isEmojiDisallowed","emojisToPush","hiddenCounter","_isEmojiHidden","isDisallowed","Direction","listStyle","focusFirstVisibleEmoji","styleInject","css","ref","insertAt","document","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","EmojiVariationPicker","pointerStyle","_useVariationPickerTo","direction","Up","getMenuDirection","getTop","emojiOffsetTop","_bodyRef$scrollTop","bodyRef","buttonHeight","Down","useVariationPickerTop","getPointerStyle","emojiTruOffsetLeft","clientWidth","usePointerStyle","pointingUp","concat","pointer","boxShadow","transformOrigin",".pointing-up","backgroundRepeat","backgroundPosition","backgroundSize",".epr-dark-theme",".epr-auto-theme","@media (prefers-color-scheme: dark)","Body","closeAllOpenToggles","addEventListener","onScroll","passive","removeEventListener","useOnScroll","mouseDownTimerRef","onEmojiClick","useContext","updateSuggested","activeEmojiStyle","onClick","_emojiFromEvent","skinToneToUse","suspectedSkinTone","activeVariationFromUnified","nextList","existing","i","min","_window3","setItem","stringify","_unused2","setSuggested","getImageUrl","imageUrl","isCustom","emojiClickOutput","onMouseDown","onMouseUp","useMouseDownHandlers","allowMouseMove","isMouseDisallowed","onMouseMove","useOnMouseMove","body","FlexDirection","flex","overflowY","overflowX","useIsSkinToneInSearch","useIsSkinToneInPreview","Flex","_ref$style","_ref$direction","ROW","SkinTonePickerDirection","_stylesheet$create","flexDirection","COLUMN","Space","Absolute","Relative","SkinTonePickerMenu","SkinTonePicker","VERTICAL","HORIZONTAL","isDisabled","isOpen","setIsOpen","_useActiveSkinToneSta","setActiveSkinTone","expandedSize","ITEM_SIZE","vertical","open","flexBasis","skinToneVariation","active","_cx2","tabIndex","Preview","isSkinToneInPreview","preview","PreviewBody","previewEmoji","setPreviewEmoji","variationPickerEmoji","allow","onEscape","onMouseOver","onEnter","onLeave","e","relatedTarget","useEmojiPreviewEvents","_previewEmoji$unified","show","defaultText","borderTop","useIsSearchMode","CategoryNavigation","activeCategory","setActiveCategory","scrollCategoryIntoView","$category","_BodyRef$current","visibleCategories","Map","observer","IntersectionObserver","_step","_iterator","_createForOfIteratorHelperLoose","done","entry","_$category$getAttribu","getAttribute","set","intersectionRatio","ratios","lastCategory","_i","_ratios","_ratios$_i","threshold","el","observe","useActiveCategoryScrollDetection","customCategoryConfig","isSearchMode","categoriesConfig","hideCustomCategory","nav","role","isActiveCategory","isCustomCategory","catBtn",".epr-search-active",".epr-main:has(input:not(:placeholder-shown))",":focus:before","SCOPE","emojiPicker","EMOJI_BUTTON","CATEGORY","CssSearch","q","genQuery","SearchContainer","isSkinToneInSearch","overlay","Search","_usePickerConfig","inc","setInc","clearSearch","placeholder","_find","p","autoFocus","_useFilter","setFilterRef","setFilter","setter","useSetFilterRef","onChange","inputValue","nextValue","longestMatch","dict","longestMatchingKey","keys","findLongestMatch","filtered","filterEmojiObjectByKeyword","statusSearchResults","filterState","searchResultsCount","_Object$entries","toString","getStatusSearchResults","useFilter","input","searchContainer","onFocus","search","_event$target$value","_event$target","visuallyHidden","icnSearch","btnClearSearch","title","icnClearnSearch","KeyboardEvents","clip","clipPath","whiteSpace","::placeholder","backgroundPositionY",":hover > .epr-icn-clear-search","Header","getActiveElement","activeElement","useGoDownFromSearchInput","focusCategoryNavigation","focusNextSkinTone","exitLeft","currentSkinTone","focusPrevSkinTone","useOnType","appendSearch","metaKey","ctrlKey","altKey","hasModifier","match","preventDefault","preloadedEmojs","PickerMain","PickerRootElement","_ref2","searchModeActive","_usePickerConfig13","useStyleConfig","focusSkinTonePicker","setSkinToneFanOpenState","goDownFromSearchInput","onKeyDown","hasOpenToggles","disallowMouseMove","Escape","usePickerMainKeyboardEvents","firstEmoji","ArrowRight","ArrowDown","Enter","click","_useSkinToneFanOpenSt2","onType","ArrowLeft","ArrowUp","useSkinTonePickerKeyboardEvents","useCategoryNavigationKeyboardEvents","goUpFromBody","nextVisibleEmoji","focusNextVisibleEmoji","focusPrevVisibleEmoji","index","nextRowElements","allElements","currentRow","nextRow","countInRow","parentHeight","hasNextRow","nextVisibleCategory","visibleEmojiOneRowDown","exitUp","prevRowElements","prevVisibleCategory","visibleEmojiOneRowUp","focusVisibleEmojiOneRowUp","useBodyKeyboardEvents","useKeyboardNavigation","url","Image","preloadEmoji","main","baseVariables","darkTheme","AUTO","autoThemeDark","searchActive","DarkTheme","--epr-emoji-variation-picker-bg-color","--epr-highlight-color","--epr-text-color","--epr-hover-bg-color","--epr-focus-bg-color","--epr-search-input-bg-color","--epr-category-label-bg-color","--epr-picker-border-color","--epr-bg-color","--epr-search-input-bg-color-active","--epr-emoji-variation-indicator-color","--epr-category-icon-active-color","--epr-skin-tone-picker-menu-color","borderWidth","borderStyle","borderColor","--","--epr-horizontal-padding","--epr-picker-border-radius","--epr-search-border-color","--epr-header-padding","--epr-active-skin-tone-indicator-border-color","--epr-active-skin-hover-color","--epr-search-input-padding","--epr-search-input-border-radius","--epr-search-input-height","--epr-search-input-text-color","--epr-search-input-placeholder-color","--epr-search-bar-inner-padding","--epr-category-navigation-button-size","--epr-emoji-variation-picker-height","--epr-preview-height","--epr-preview-text-size","--epr-preview-text-padding","--epr-preview-border-color","--epr-preview-text-color","--epr-category-padding","--epr-category-label-text-color","--epr-category-label-padding","--epr-category-label-height","--epr-emoji-size","--epr-emoji-padding","--epr-emoji-fullsize","--epr-emoji-hover-color","--epr-emoji-variation-indicator-color-hover","--epr-header-overlay-z-index","--epr-emoji-variations-indictator-z-index","--epr-category-label-z-index","--epr-skin-variation-picker-z-index","--epr-preview-z-index","--epr-dark","--epr-dark-emoji-variation-picker-bg-color","--epr-dark-highlight-color","--epr-dark-text-color","--epr-dark-hover-bg-color","--epr-dark-focus-bg-color","--epr-dark-search-input-bg-color","--epr-dark-category-label-bg-color","--epr-dark-picker-border-color","--epr-dark-bg-color","--epr-dark-search-input-bg-color-active","--epr-dark-emoji-variation-indicator-color","--epr-dark-category-icon-active-color","--epr-dark-skin-tone-picker-menu-color","autoTheme","EmojiPicker","prevCustomEmojis","_prev$customEmojis","nextCustomEmojis","_next$customEmojis","ErrorBoundary","_React$Component","_this","call","hasError","getDerivedStateFromError","_proto","prototype","componentDidCatch","error","errorInfo","console","render","this","_ref$size","_ref$emojiStyle","emojiUrl","MutableConfigRef","useDefineMutableConfig","EmojiPickerReact"],"mappings":"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"}